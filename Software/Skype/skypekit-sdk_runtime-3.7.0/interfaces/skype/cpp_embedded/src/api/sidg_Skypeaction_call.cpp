#include "SidPlatform.hpp"
#include "SidCommandProcessor.hpp"
#include "skype-embedded_2.h"
#include "sidg_msgs_Skype.hpp"

#ifdef SE_USE_NAMESPACE
namespace Skype {
#endif
bool Skype::Start(
        bool& started
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(5,"ZR\000\221\001",&SkypeFields[0], 0,0,MsgStartResponse::BEGIN, &started);
        return __status;
        #        else
        bool __status = __session->call_0n(5,"ZR\000\221\001",&SkypeFields[0],MsgStartResponse::BEGIN,&started);
        return __status;
        #        endif
}

bool Skype::GetVersionString(
        Sid::String& version
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\034",&SkypeFields[0], 0,0,MsgconfigGetVersionStringResponse::BEGIN, &version);
        return __status;
        #        else
        bool __status = __session->call_0n(4,"ZR\000\034",&SkypeFields[0],MsgconfigGetVersionStringResponse::BEGIN,&version);
        return __status;
        #        endif
}

bool ContactGroup::GiveDisplayName(
        const Sid::String& name
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactContactGroupGiveDisplayNameRequest __request;
        __request.objectID= object_id;
        __request.name=name;
        bool __status = __session->call(4,"ZR\012\001",&SkypeFields[0], MsgcontactContactGroupGiveDisplayNameRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\012\001",&SkypeFields[0], MsgcontactContactGroupGiveDisplayNameRequest::BEGIN,&object_id,&name);
        #        endif
}

bool ContactGroup::Delete(
        bool& result
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\012\002",&SkypeFields[0], MsgcontactContactGroupDeleteRequest::BEGIN, &object_id,MsgcontactContactGroupDeleteResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\012\002",&SkypeFields[0], MsgcontactContactGroupDeleteRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactGroupDeleteResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool ContactGroup::GetConversations(
        ConversationRefs& conversations
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\012\003",&SkypeFields[0], MsgcontactContactGroupGetConversationsRequest::BEGIN, &object_id,MsgcontactContactGroupGetConversationsResponse::BEGIN, &conversations);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\012\003",&SkypeFields[0], MsgcontactContactGroupGetConversationsRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactGroupGetConversationsResponse::BEGIN,&conversations);
                return __status;
        }
        return false;
        #        endif
}

bool ContactGroup::CanAddConversation(
        bool& result,// true if AddConversation(contact) works on this group
        const ConversationRef conversation
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactContactGroupCanAddConversationRequest __request;
        __request.objectID= object_id;
        __request.conversation=conversation;
        bool __status = __session->call(4,"ZR\012\004",&SkypeFields[0], MsgcontactContactGroupCanAddConversationRequest::BEGIN, &__request,MsgcontactContactGroupCanAddConversationResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\012\004",&SkypeFields[0], MsgcontactContactGroupCanAddConversationRequest::BEGIN,&object_id,&conversation)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactGroupCanAddConversationResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool ContactGroup::AddConversation(
        const ConversationRef& conversation
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactContactGroupAddConversationRequest __request;
        __request.objectID= object_id;
        __request.conversation=conversation;
        bool __status = __session->call(4,"ZR\012\005",&SkypeFields[0], MsgcontactContactGroupAddConversationRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\012\005",&SkypeFields[0], MsgcontactContactGroupAddConversationRequest::BEGIN,&object_id,&conversation);
        #        endif
}

bool ContactGroup::CanRemoveConversation(
        bool& result// true if RemoveConversation(contact) works on this group
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\012\006",&SkypeFields[0], MsgcontactContactGroupCanRemoveConversationRequest::BEGIN, &object_id,MsgcontactContactGroupCanRemoveConversationResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\012\006",&SkypeFields[0], MsgcontactContactGroupCanRemoveConversationRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactGroupCanRemoveConversationResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool ContactGroup::RemoveConversation(
        const ConversationRef& conversation
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactContactGroupRemoveConversationRequest __request;
        __request.objectID= object_id;
        __request.conversation=conversation;
        bool __status = __session->call(4,"ZR\012\007",&SkypeFields[0], MsgcontactContactGroupRemoveConversationRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\012\007",&SkypeFields[0], MsgcontactContactGroupRemoveConversationRequest::BEGIN,&object_id,&conversation);
        #        endif
}

bool ContactGroup::GetContacts(
        ContactRefs& contacts
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\012\010",&SkypeFields[0], MsgcontactContactGroupGetContactsRequest::BEGIN, &object_id,MsgcontactContactGroupGetContactsResponse::BEGIN, &contacts);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\012\010",&SkypeFields[0], MsgcontactContactGroupGetContactsRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactGroupGetContactsResponse::BEGIN,&contacts);
                return __status;
        }
        return false;
        #        endif
}

bool ContactGroup::CanAddContact(
        bool& result,// true if AddContact(contact) works on this group
        const ContactRef contact
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactContactGroupCanAddContactRequest __request;
        __request.objectID= object_id;
        __request.contact=contact;
        bool __status = __session->call(4,"ZR\012\011",&SkypeFields[0], MsgcontactContactGroupCanAddContactRequest::BEGIN, &__request,MsgcontactContactGroupCanAddContactResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\012\011",&SkypeFields[0], MsgcontactContactGroupCanAddContactRequest::BEGIN,&object_id,&contact)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactGroupCanAddContactResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool ContactGroup::AddContact(
        const ContactRef& contact
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactContactGroupAddContactRequest __request;
        __request.objectID= object_id;
        __request.contact=contact;
        bool __status = __session->call(4,"ZR\012\012",&SkypeFields[0], MsgcontactContactGroupAddContactRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\012\012",&SkypeFields[0], MsgcontactContactGroupAddContactRequest::BEGIN,&object_id,&contact);
        #        endif
}

bool ContactGroup::CanRemoveContact(
        bool& result// true if RemoveContact(contact) works on this group
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\012\013",&SkypeFields[0], MsgcontactContactGroupCanRemoveContactRequest::BEGIN, &object_id,MsgcontactContactGroupCanRemoveContactResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\012\013",&SkypeFields[0], MsgcontactContactGroupCanRemoveContactRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactGroupCanRemoveContactResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool ContactGroup::RemoveContact(
        const ContactRef& contact
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactContactGroupRemoveContactRequest __request;
        __request.objectID= object_id;
        __request.contact=contact;
        bool __status = __session->call(4,"ZR\012\014",&SkypeFields[0], MsgcontactContactGroupRemoveContactRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\012\014",&SkypeFields[0], MsgcontactContactGroupRemoveContactRequest::BEGIN,&object_id,&contact);
        #        endif
}

bool Skype::GetHardwiredContactGroup(
        const ContactGroup::TYPE& type,
        ContactGroupRef& contactGroup
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\001",&SkypeFields[0], MsgcontactGetHardwiredContactGroupRequest::BEGIN, &type,MsgcontactGetHardwiredContactGroupResponse::BEGIN, &contactGroup);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000\001",&SkypeFields[0], MsgcontactGetHardwiredContactGroupRequest::BEGIN,&type)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactGetHardwiredContactGroupResponse::BEGIN,&contactGroup);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::GetCustomContactGroups(
        ContactGroupRefs& groups
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\002",&SkypeFields[0], 0,0,MsgcontactGetCustomContactGroupsResponse::BEGIN, &groups);
        return __status;
        #        else
        bool __status = __session->call_0n(4,"ZR\000\002",&SkypeFields[0],MsgcontactGetCustomContactGroupsResponse::BEGIN,&groups);
        return __status;
        #        endif
}

bool Skype::CreateCustomContactGroup(
        ContactGroupRef& group
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\003",&SkypeFields[0], 0,0,MsgcontactCreateCustomContactGroupResponse::BEGIN, &group);
        return __status;
        #        else
        bool __status = __session->call_0n(4,"ZR\000\003",&SkypeFields[0],MsgcontactCreateCustomContactGroupResponse::BEGIN,&group);
        return __status;
        #        endif
}

bool Contact::GetType(
        TYPE& type
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\002\001",&SkypeFields[0], MsgcontactContactGetTypeRequest::BEGIN, &object_id,MsgcontactContactGetTypeResponse::BEGIN, &type);
        return __status;
        #        else
        int __rsp_type;
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\002\001",&SkypeFields[0], MsgcontactContactGetTypeRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactGetTypeResponse::BEGIN,&__rsp_type);
                type=static_cast<TYPE>(__rsp_type);
                return __status;
        }
        return false;
        #        endif
}

bool Contact::GetIdentity(
        Sid::String& identity// returns CONTACT_SKYPENAME or CONTACT_PSTNNUMBER value
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\002\002",&SkypeFields[0], MsgcontactContactGetIdentityRequest::BEGIN, &object_id,MsgcontactContactGetIdentityResponse::BEGIN, &identity);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\002\002",&SkypeFields[0], MsgcontactContactGetIdentityRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactGetIdentityResponse::BEGIN,&identity);
                return __status;
        }
        return false;
        #        endif
}

bool Contact::GetAvatar(
        bool& present,
        Sid::Binary& avatar
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactContactGetAvatarResponse __response;
        bool __status = __session->call(4,"ZR\002\004",&SkypeFields[0], MsgcontactContactGetAvatarRequest::BEGIN, &object_id,MsgcontactContactGetAvatarResponse::BEGIN, &__response);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\002\004",&SkypeFields[0], MsgcontactContactGetAvatarRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactGetAvatarResponse::BEGIN,&present,&avatar);
                return __status;
        }
        return false;
        #        endif
}

bool Contact::GetVerifiedEmail(
        Sid::String& email
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\002\003",&SkypeFields[0], MsgcontactContactGetVerifiedEmailRequest::BEGIN, &object_id,MsgcontactContactGetVerifiedEmailResponse::BEGIN, &email);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\002\003",&SkypeFields[0], MsgcontactContactGetVerifiedEmailRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactGetVerifiedEmailResponse::BEGIN,&email);
                return __status;
        }
        return false;
        #        endif
}

bool Contact::GetVerifiedCompany(
        Sid::String& company
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\002\010",&SkypeFields[0], MsgcontactContactGetVerifiedCompanyRequest::BEGIN, &object_id,MsgcontactContactGetVerifiedCompanyResponse::BEGIN, &company);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\002\010",&SkypeFields[0], MsgcontactContactGetVerifiedCompanyRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactGetVerifiedCompanyResponse::BEGIN,&company);
                return __status;
        }
        return false;
        #        endif
}

bool Contact::IsMemberOf(
        const ContactGroupRef& group,
        bool& result
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactContactIsMemberOfRequest __request;
        __request.objectID= object_id;
        __request.group=group;
        bool __status = __session->call(4,"ZR\002\006",&SkypeFields[0], MsgcontactContactIsMemberOfRequest::BEGIN, &__request,MsgcontactContactIsMemberOfResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\002\006",&SkypeFields[0], MsgcontactContactIsMemberOfRequest::BEGIN,&object_id,&group)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactIsMemberOfResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool Contact::IsMemberOfHardwiredGroup(
        const ContactGroup::TYPE& groupType,
        bool& result
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactContactIsMemberOfHardwiredGroupRequest __request;
        __request.objectID= object_id;
        __request.groupType=groupType;
        bool __status = __session->call(4,"ZR\002\007",&SkypeFields[0], MsgcontactContactIsMemberOfHardwiredGroupRequest::BEGIN, &__request,MsgcontactContactIsMemberOfHardwiredGroupResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\002\007",&SkypeFields[0], MsgcontactContactIsMemberOfHardwiredGroupRequest::BEGIN,&object_id,&groupType)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactIsMemberOfHardwiredGroupResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool Contact::SetBlocked(
        const bool& blocked,
        const bool abuse
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactContactSetBlockedRequest __request;
        __request.objectID= object_id;
        __request.blocked=blocked;
        __request.abuse=abuse;
        bool __status = __session->call(4,"ZR\002\026",&SkypeFields[0], MsgcontactContactSetBlockedRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\002\026",&SkypeFields[0], MsgcontactContactSetBlockedRequest::BEGIN,&object_id,&blocked,&abuse);
        #        endif
}

bool Contact::IgnoreAuthRequest(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\002\025",&SkypeFields[0], MsgcontactContactIgnoreAuthRequestRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\002\025",&SkypeFields[0], MsgcontactContactIgnoreAuthRequestRequest::BEGIN,&object_id);
        #        endif
}

bool Contact::GiveDisplayName(
        const Sid::String& name
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactContactGiveDisplayNameRequest __request;
        __request.objectID= object_id;
        __request.name=name;
        bool __status = __session->call(4,"ZR\002\012",&SkypeFields[0], MsgcontactContactGiveDisplayNameRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\002\012",&SkypeFields[0], MsgcontactContactGiveDisplayNameRequest::BEGIN,&object_id,&name);
        #        endif
}

bool Contact::SetBuddyStatus(
        const bool& isMyBuddy,
        const bool syncAuth
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactContactSetBuddyStatusRequest __request;
        __request.objectID= object_id;
        __request.isMyBuddy=isMyBuddy;
        __request.syncAuth=syncAuth;
        bool __status = __session->call(4,"ZR\002\014",&SkypeFields[0], MsgcontactContactSetBuddyStatusRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\002\014",&SkypeFields[0], MsgcontactContactSetBuddyStatusRequest::BEGIN,&object_id,&isMyBuddy,&syncAuth);
        #        endif
}

bool Contact::SendAuthRequest(
        const Sid::String& message,
        const uint extras_bitmask// bitmask of EXTRA_AUTHREQ_FIELDS
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactContactSendAuthRequestRequest __request;
        __request.objectID= object_id;
        __request.message=message;
        __request.extras_bitmask=extras_bitmask;
        bool __status = __session->call(4,"ZR\002\015",&SkypeFields[0], MsgcontactContactSendAuthRequestRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\002\015",&SkypeFields[0], MsgcontactContactSendAuthRequestRequest::BEGIN,&object_id,&message,&extras_bitmask);
        #        endif
}

bool Contact::HasAuthorizedMe(
        bool& result
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\002\016",&SkypeFields[0], MsgcontactContactHasAuthorizedMeRequest::BEGIN, &object_id,MsgcontactContactHasAuthorizedMeResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\002\016",&SkypeFields[0], MsgcontactContactHasAuthorizedMeRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactHasAuthorizedMeResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool Contact::SetPhoneNumber(
        const uint& num,// in range 1..3
        const Sid::String& label,
        const Sid::String& number
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactContactSetPhoneNumberRequest __request;
        __request.objectID= object_id;
        __request.num=num;
        __request.label=label;
        __request.number=number;
        bool __status = __session->call(4,"ZR\002\017",&SkypeFields[0], MsgcontactContactSetPhoneNumberRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\002\017",&SkypeFields[0], MsgcontactContactSetPhoneNumberRequest::BEGIN,&object_id,&num,&label,&number);
        #        endif
}

bool Contact::OpenConversation(
        ConversationRef& conversation
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\002\021",&SkypeFields[0], MsgcontactContactOpenConversationRequest::BEGIN, &object_id,MsgcontactContactOpenConversationResponse::BEGIN, &conversation);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\002\021",&SkypeFields[0], MsgcontactContactOpenConversationRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactOpenConversationResponse::BEGIN,&conversation);
                return __status;
        }
        return false;
        #        endif
}

bool Contact::HasCapability(
        const CAPABILITY& capability,
        bool& result,
        const bool queryServer// sets CONTACT_REFRESHING if querying from server
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactContactHasCapabilityRequest __request;
        __request.objectID= object_id;
        __request.capability=capability;
        __request.queryServer=queryServer;
        bool __status = __session->call(4,"ZR\002\022",&SkypeFields[0], MsgcontactContactHasCapabilityRequest::BEGIN, &__request,MsgcontactContactHasCapabilityResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\002\022",&SkypeFields[0], MsgcontactContactHasCapabilityRequest::BEGIN,&object_id,&capability,&queryServer)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactHasCapabilityResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool Contact::GetCapabilityStatus(
        const CAPABILITY& capability,
        CAPABILITYSTATUS& status,
        const bool queryServer
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactContactGetCapabilityStatusRequest __request;
        __request.objectID= object_id;
        __request.capability=capability;
        __request.queryServer=queryServer;
        bool __status = __session->call(4,"ZR\002\023",&SkypeFields[0], MsgcontactContactGetCapabilityStatusRequest::BEGIN, &__request,MsgcontactContactGetCapabilityStatusResponse::BEGIN, &status);
        return __status;
        #        else
        int __rsp_status;
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\002\023",&SkypeFields[0], MsgcontactContactGetCapabilityStatusRequest::BEGIN,&object_id,&capability,&queryServer)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactContactGetCapabilityStatusResponse::BEGIN,&__rsp_status);
                status=static_cast<CAPABILITYSTATUS>(__rsp_status);
                return __status;
        }
        return false;
        #        endif
}

bool Contact::RefreshProfile(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\002\024",&SkypeFields[0], MsgcontactContactRefreshProfileRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\002\024",&SkypeFields[0], MsgcontactContactRefreshProfileRequest::BEGIN,&object_id);
        #        endif
}

bool Skype::GetContactType(
        const Sid::String& identity,
        Contact::TYPE& type
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\005",&SkypeFields[0], MsgcontactGetContactTypeRequest::BEGIN, &identity,MsgcontactGetContactTypeResponse::BEGIN, &type);
        return __status;
        #        else
        int __rsp_type;
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000\005",&SkypeFields[0], MsgcontactGetContactTypeRequest::BEGIN,&identity)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactGetContactTypeResponse::BEGIN,&__rsp_type);
                type=static_cast<Contact::TYPE>(__rsp_type);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::GetContact(
        const Sid::String& identity,
        ContactRef& contact
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\006",&SkypeFields[0], MsgcontactGetContactRequest::BEGIN, &identity,MsgcontactGetContactResponse::BEGIN, &contact);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000\006",&SkypeFields[0], MsgcontactGetContactRequest::BEGIN,&identity)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactGetContactResponse::BEGIN,&contact);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::FindContactByPstnNumber(
        const Sid::String& number,
        bool& found,
        ContactRef& contact,
        uint& foundInKey// type is actually PROPKEY
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactFindContactByPstnNumberResponse __response;
        bool __status = __session->call(4,"ZR\000\010",&SkypeFields[0], MsgcontactFindContactByPstnNumberRequest::BEGIN, &number,MsgcontactFindContactByPstnNumberResponse::BEGIN, &__response);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000\010",&SkypeFields[0], MsgcontactFindContactByPstnNumberRequest::BEGIN,&number)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactFindContactByPstnNumberResponse::BEGIN,&found,&contact,&foundInKey);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::GetIdentityType(
        const Sid::String& identity,
        IDENTITYTYPE& type
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\023",&SkypeFields[0], MsgcontactGetIdentityTypeRequest::BEGIN, &identity,MsgcontactGetIdentityTypeResponse::BEGIN, &type);
        return __status;
        #        else
        int __rsp_type;
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000\023",&SkypeFields[0], MsgcontactGetIdentityTypeRequest::BEGIN,&identity)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactGetIdentityTypeResponse::BEGIN,&__rsp_type);
                type=static_cast<IDENTITYTYPE>(__rsp_type);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::IdentitiesMatch(
        const Sid::String& identityA,
        const Sid::String& identityB,
        bool& result
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactIdentitiesMatchRequest __request;
        __request.identityA=identityA;
        __request.identityB=identityB;
        bool __status = __session->call(4,"ZR\000X",&SkypeFields[0], MsgcontactIdentitiesMatchRequest::BEGIN, &__request,MsgcontactIdentitiesMatchResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000X",&SkypeFields[0], MsgcontactIdentitiesMatchRequest::BEGIN,&identityA,&identityB)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactIdentitiesMatchResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::NormalizeIdentity(
        const Sid::String& original,
        NORMALIZERESULT& result,
        Sid::String& normalized,
        const bool isNewSkypeName
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactNormalizeIdentityRequest __request;
        __request.original=original;
        __request.isNewSkypeName=isNewSkypeName;
        MsgcontactNormalizeIdentityResponse __response;
        bool __status = __session->call(4,"ZR\000\011",&SkypeFields[0], MsgcontactNormalizeIdentityRequest::BEGIN, &__request,MsgcontactNormalizeIdentityResponse::BEGIN, &__response);
        result=static_cast<NORMALIZERESULT>(__response.result);
        return __status;
        #        else
        int __rsp_result;
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000\011",&SkypeFields[0], MsgcontactNormalizeIdentityRequest::BEGIN,&original,&isNewSkypeName)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactNormalizeIdentityResponse::BEGIN,&__rsp_result,&normalized);
                result=static_cast<NORMALIZERESULT>(__rsp_result);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::NormalizePSTNWithCountry(
        const Sid::String& original,
        NORMALIZERESULT& result,
        Sid::String& normalized,
        const uint countryPrefix
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactNormalizePSTNWithCountryRequest __request;
        __request.original=original;
        __request.countryPrefix=countryPrefix;
        MsgcontactNormalizePSTNWithCountryResponse __response;
        bool __status = __session->call(5,"ZR\000\315\001",&SkypeFields[0], MsgcontactNormalizePSTNWithCountryRequest::BEGIN, &__request,MsgcontactNormalizePSTNWithCountryResponse::BEGIN, &__response);
        result=static_cast<NORMALIZERESULT>(__response.result);
        return __status;
        #        else
        int __rsp_result;
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,5,"ZR\000\315\001",&SkypeFields[0], MsgcontactNormalizePSTNWithCountryRequest::BEGIN,&original,&countryPrefix)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactNormalizePSTNWithCountryResponse::BEGIN,&__rsp_result,&normalized);
                result=static_cast<NORMALIZERESULT>(__rsp_result);
                return __status;
        }
        return false;
        #        endif
}

bool ContactSearch::AddMinAgeTerm(
        const uint& min_age_in_years,
        bool& valid,
        const bool add_to_subs
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactsearchContactSearchAddMinAgeTermRequest __request;
        __request.objectID= object_id;
        __request.min_age_in_years=min_age_in_years;
        __request.add_to_subs=add_to_subs;
        bool __status = __session->call(4,"ZR\001\001",&SkypeFields[0], MsgcontactsearchContactSearchAddMinAgeTermRequest::BEGIN, &__request,MsgcontactsearchContactSearchAddMinAgeTermResponse::BEGIN, &valid);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\001\001",&SkypeFields[0], MsgcontactsearchContactSearchAddMinAgeTermRequest::BEGIN,&object_id,&min_age_in_years,&add_to_subs)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactsearchContactSearchAddMinAgeTermResponse::BEGIN,&valid);
                return __status;
        }
        return false;
        #        endif
}

bool ContactSearch::AddMaxAgeTerm(
        const uint& max_age_in_years,
        bool& valid,
        const bool add_to_subs
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactsearchContactSearchAddMaxAgeTermRequest __request;
        __request.objectID= object_id;
        __request.max_age_in_years=max_age_in_years;
        __request.add_to_subs=add_to_subs;
        bool __status = __session->call(4,"ZR\001\002",&SkypeFields[0], MsgcontactsearchContactSearchAddMaxAgeTermRequest::BEGIN, &__request,MsgcontactsearchContactSearchAddMaxAgeTermResponse::BEGIN, &valid);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\001\002",&SkypeFields[0], MsgcontactsearchContactSearchAddMaxAgeTermRequest::BEGIN,&object_id,&max_age_in_years,&add_to_subs)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactsearchContactSearchAddMaxAgeTermResponse::BEGIN,&valid);
                return __status;
        }
        return false;
        #        endif
}

bool ContactSearch::AddEmailTerm(
        const Sid::String& email,
        bool& valid,
        const bool add_to_subs
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactsearchContactSearchAddEmailTermRequest __request;
        __request.objectID= object_id;
        __request.email=email;
        __request.add_to_subs=add_to_subs;
        bool __status = __session->call(4,"ZR\001\003",&SkypeFields[0], MsgcontactsearchContactSearchAddEmailTermRequest::BEGIN, &__request,MsgcontactsearchContactSearchAddEmailTermResponse::BEGIN, &valid);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\001\003",&SkypeFields[0], MsgcontactsearchContactSearchAddEmailTermRequest::BEGIN,&object_id,&email,&add_to_subs)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactsearchContactSearchAddEmailTermResponse::BEGIN,&valid);
                return __status;
        }
        return false;
        #        endif
}

bool ContactSearch::AddLanguageTerm(
        const Sid::String& language,
        bool& valid,
        const bool add_to_subs
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactsearchContactSearchAddLanguageTermRequest __request;
        __request.objectID= object_id;
        __request.language=language;
        __request.add_to_subs=add_to_subs;
        bool __status = __session->call(4,"ZR\001\004",&SkypeFields[0], MsgcontactsearchContactSearchAddLanguageTermRequest::BEGIN, &__request,MsgcontactsearchContactSearchAddLanguageTermResponse::BEGIN, &valid);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\001\004",&SkypeFields[0], MsgcontactsearchContactSearchAddLanguageTermRequest::BEGIN,&object_id,&language,&add_to_subs)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactsearchContactSearchAddLanguageTermResponse::BEGIN,&valid);
                return __status;
        }
        return false;
        #        endif
}

bool ContactSearch::AddStrTerm(
        const int& prop,// only selected contact properties
        const CONDITION& cond,
        const Sid::String& value,
        bool& valid,
        const bool add_to_subs
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactsearchContactSearchAddStrTermRequest __request;
        __request.objectID= object_id;
        __request.prop=prop;
        __request.cond=cond;
        __request.value=value;
        __request.add_to_subs=add_to_subs;
        bool __status = __session->call(4,"ZR\001\005",&SkypeFields[0], MsgcontactsearchContactSearchAddStrTermRequest::BEGIN, &__request,MsgcontactsearchContactSearchAddStrTermResponse::BEGIN, &valid);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\001\005",&SkypeFields[0], MsgcontactsearchContactSearchAddStrTermRequest::BEGIN,&object_id,&prop,&cond,&value,&add_to_subs)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactsearchContactSearchAddStrTermResponse::BEGIN,&valid);
                return __status;
        }
        return false;
        #        endif
}

bool ContactSearch::AddIntTerm(
        const int& prop,// only selected contact properties
        const CONDITION& cond,
        const uint& value,
        bool& valid,
        const bool add_to_subs
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactsearchContactSearchAddIntTermRequest __request;
        __request.objectID= object_id;
        __request.prop=prop;
        __request.cond=cond;
        __request.value=value;
        __request.add_to_subs=add_to_subs;
        bool __status = __session->call(4,"ZR\001\006",&SkypeFields[0], MsgcontactsearchContactSearchAddIntTermRequest::BEGIN, &__request,MsgcontactsearchContactSearchAddIntTermResponse::BEGIN, &valid);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\001\006",&SkypeFields[0], MsgcontactsearchContactSearchAddIntTermRequest::BEGIN,&object_id,&prop,&cond,&value,&add_to_subs)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactsearchContactSearchAddIntTermResponse::BEGIN,&valid);
                return __status;
        }
        return false;
        #        endif
}

bool ContactSearch::AddOr(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\001\007",&SkypeFields[0], MsgcontactsearchContactSearchAddOrRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\001\007",&SkypeFields[0], MsgcontactsearchContactSearchAddOrRequest::BEGIN,&object_id);
        #        endif
}

bool ContactSearch::IsValid(
        bool& result
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\001\010",&SkypeFields[0], MsgcontactsearchContactSearchIsValidRequest::BEGIN, &object_id,MsgcontactsearchContactSearchIsValidResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\001\010",&SkypeFields[0], MsgcontactsearchContactSearchIsValidRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactsearchContactSearchIsValidResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool ContactSearch::Submit(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\001\011",&SkypeFields[0], MsgcontactsearchContactSearchSubmitRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\001\011",&SkypeFields[0], MsgcontactsearchContactSearchSubmitRequest::BEGIN,&object_id);
        #        endif
}

bool ContactSearch::Extend(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\001\012",&SkypeFields[0], MsgcontactsearchContactSearchExtendRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\001\012",&SkypeFields[0], MsgcontactsearchContactSearchExtendRequest::BEGIN,&object_id);
        #        endif
}

bool ContactSearch::Release(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\001\014",&SkypeFields[0], MsgcontactsearchContactSearchReleaseRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\001\014",&SkypeFields[0], MsgcontactsearchContactSearchReleaseRequest::BEGIN,&object_id);
        #        endif
}

bool ContactSearch::GetResults(
        ContactRefs& contacts,
        const uint from,
        const uint count
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgcontactsearchContactSearchGetResultsRequest __request;
        __request.objectID= object_id;
        __request.from=from;
        __request.count=count;
        bool __status = __session->call(4,"ZR\001\013",&SkypeFields[0], MsgcontactsearchContactSearchGetResultsRequest::BEGIN, &__request,MsgcontactsearchContactSearchGetResultsResponse::BEGIN, &contacts);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\001\013",&SkypeFields[0], MsgcontactsearchContactSearchGetResultsRequest::BEGIN,&object_id,&from,&count)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactsearchContactSearchGetResultsResponse::BEGIN,&contacts);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::GetOptimalAgeRanges(
        Sid::List_uint& rangeList
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000M",&SkypeFields[0], 0,0,MsgcontactsearchGetOptimalAgeRangesResponse::BEGIN, &rangeList);
        return __status;
        #        else
        bool __status = __session->call_0n(4,"ZR\000M",&SkypeFields[0],MsgcontactsearchGetOptimalAgeRangesResponse::BEGIN,&rangeList);
        return __status;
        #        endif
}

bool Skype::CreateContactSearch(
        ContactSearchRef& search
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\012",&SkypeFields[0], 0,0,MsgcontactsearchCreateContactSearchResponse::BEGIN, &search);
        return __status;
        #        else
        bool __status = __session->call_0n(4,"ZR\000\012",&SkypeFields[0],MsgcontactsearchCreateContactSearchResponse::BEGIN,&search);
        return __status;
        #        endif
}

bool Skype::CreateBasicContactSearch(
        const Sid::String& text,
        ContactSearchRef& search
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\013",&SkypeFields[0], MsgcontactsearchCreateBasicContactSearchRequest::BEGIN, &text,MsgcontactsearchCreateBasicContactSearchResponse::BEGIN, &search);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000\013",&SkypeFields[0], MsgcontactsearchCreateBasicContactSearchRequest::BEGIN,&text)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactsearchCreateBasicContactSearchResponse::BEGIN,&search);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::CreateIdentitySearch(
        const Sid::String& identity,
        ContactSearchRef& search
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\014",&SkypeFields[0], MsgcontactsearchCreateIdentitySearchRequest::BEGIN, &identity,MsgcontactsearchCreateIdentitySearchResponse::BEGIN, &search);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000\014",&SkypeFields[0], MsgcontactsearchCreateIdentitySearchRequest::BEGIN,&identity)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgcontactsearchCreateIdentitySearchResponse::BEGIN,&search);
                return __status;
        }
        return false;
        #        endif
}

bool Participant::CanSetRankTo(
        const RANK& rank,
        bool& result
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationParticipantCanSetRankToRequest __request;
        __request.objectID= object_id;
        __request.rank=rank;
        bool __status = __session->call(4,"ZR\023\001",&SkypeFields[0], MsgconversationParticipantCanSetRankToRequest::BEGIN, &__request,MsgconversationParticipantCanSetRankToResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\023\001",&SkypeFields[0], MsgconversationParticipantCanSetRankToRequest::BEGIN,&object_id,&rank)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationParticipantCanSetRankToResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool Participant::SetRankTo(
        const RANK& rank
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationParticipantSetRankToRequest __request;
        __request.objectID= object_id;
        __request.rank=rank;
        bool __status = __session->call(4,"ZR\023\002",&SkypeFields[0], MsgconversationParticipantSetRankToRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\023\002",&SkypeFields[0], MsgconversationParticipantSetRankToRequest::BEGIN,&object_id,&rank);
        #        endif
}

bool Participant::Ring(
        const Sid::String identityToUse,// ring an alternate identity, such as a PSTN number
        const bool videoCall,// enable video
        const uint nrofRedials,// Unused
        const uint redialPeriod,// Unused
        const bool autoStartVM,// Unused.  On dialog, if falling on VM, greeting and recording will be automatically started
        const Sid::String origin// When call is initiated from web link, must contain the URI that was used
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationParticipantRingRequest __request;
        __request.objectID= object_id;
        __request.identityToUse=identityToUse;
        __request.videoCall=videoCall;
        __request.nrofRedials=nrofRedials;
        __request.redialPeriod=redialPeriod;
        __request.autoStartVM=autoStartVM;
        __request.origin=origin;
        bool __status = __session->call(4,"ZR\023\003",&SkypeFields[0], MsgconversationParticipantRingRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\023\003",&SkypeFields[0], MsgconversationParticipantRingRequest::BEGIN,&object_id,&identityToUse,&videoCall,&nrofRedials,&redialPeriod,&autoStartVM,&origin);
        #        endif
}

bool Participant::RingIt(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\023\010",&SkypeFields[0], MsgconversationParticipantRingItRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\023\010",&SkypeFields[0], MsgconversationParticipantRingItRequest::BEGIN,&object_id);
        #        endif
}

bool Participant::SetLiveIdentityToUse(
        const Sid::String identityToUse// Empty string will reset it to default, ie the participant identity
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationParticipantSetLiveIdentityToUseRequest __request;
        __request.objectID= object_id;
        __request.identityToUse=identityToUse;
        bool __status = __session->call(4,"ZR\023\007",&SkypeFields[0], MsgconversationParticipantSetLiveIdentityToUseRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\023\007",&SkypeFields[0], MsgconversationParticipantSetLiveIdentityToUseRequest::BEGIN,&object_id,&identityToUse);
        #        endif
}

bool Participant::GetVideo(
        VideoRef& video
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\023\004",&SkypeFields[0], MsgconversationParticipantGetVideoRequest::BEGIN, &object_id,MsgconversationParticipantGetVideoResponse::BEGIN, &video);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\023\004",&SkypeFields[0], MsgconversationParticipantGetVideoRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationParticipantGetVideoResponse::BEGIN,&video);
                return __status;
        }
        return false;
        #        endif
}

bool Participant::Hangup(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\023\005",&SkypeFields[0], MsgconversationParticipantHangupRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\023\005",&SkypeFields[0], MsgconversationParticipantHangupRequest::BEGIN,&object_id);
        #        endif
}

bool Participant::Retire(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\023\006",&SkypeFields[0], MsgconversationParticipantRetireRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\023\006",&SkypeFields[0], MsgconversationParticipantRetireRequest::BEGIN,&object_id);
        #        endif
}

bool Conversation::SetOption(
        const int& propKey,// allowed values are conversation 'opt' properties
        const uint& value
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationSetOptionRequest __request;
        __request.objectID= object_id;
        __request.propKey=propKey;
        __request.value=value;
        bool __status = __session->call(4,"ZR\022\001",&SkypeFields[0], MsgconversationConversationSetOptionRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\001",&SkypeFields[0], MsgconversationConversationSetOptionRequest::BEGIN,&object_id,&propKey,&value);
        #        endif
}

bool Conversation::SetTopic(
        const Sid::String& topic,
        const bool isXML
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationSetTopicRequest __request;
        __request.objectID= object_id;
        __request.topic=topic;
        __request.isXML=isXML;
        bool __status = __session->call(4,"ZR\022\002",&SkypeFields[0], MsgconversationConversationSetTopicRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\002",&SkypeFields[0], MsgconversationConversationSetTopicRequest::BEGIN,&object_id,&topic,&isXML);
        #        endif
}

bool Conversation::SetGuidelines(
        const Sid::String& guidelines,
        const bool isXML
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationSetGuidelinesRequest __request;
        __request.objectID= object_id;
        __request.guidelines=guidelines;
        __request.isXML=isXML;
        bool __status = __session->call(4,"ZR\022\003",&SkypeFields[0], MsgconversationConversationSetGuidelinesRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\003",&SkypeFields[0], MsgconversationConversationSetGuidelinesRequest::BEGIN,&object_id,&guidelines,&isXML);
        #        endif
}

bool Conversation::SetPicture(
        const Sid::Binary& jpeg
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationSetPictureRequest __request;
        __request.objectID= object_id;
        __request.jpeg=jpeg;
        bool __status = __session->call(4,"ZR\022\004",&SkypeFields[0], MsgconversationConversationSetPictureRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\004",&SkypeFields[0], MsgconversationConversationSetPictureRequest::BEGIN,&object_id,&jpeg);
        #        endif
}

bool Conversation::SpawnConference(
        const Sid::List_String& identitiesToAdd,
        ConversationRef& conference// resulting conference
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationSpawnConferenceRequest __request;
        __request.objectID= object_id;
        __request.identitiesToAdd=identitiesToAdd;
        bool __status = __session->call(4,"ZR\022\006",&SkypeFields[0], MsgconversationConversationSpawnConferenceRequest::BEGIN, &__request,MsgconversationConversationSpawnConferenceResponse::BEGIN, &conference);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\022\006",&SkypeFields[0], MsgconversationConversationSpawnConferenceRequest::BEGIN,&object_id,&identitiesToAdd)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationConversationSpawnConferenceResponse::BEGIN,&conference);
                return __status;
        }
        return false;
        #        endif
}

bool Conversation::AddConsumers(
        const Sid::List_String& identities
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationAddConsumersRequest __request;
        __request.objectID= object_id;
        __request.identities=identities;
        bool __status = __session->call(4,"ZR\022\007",&SkypeFields[0], MsgconversationConversationAddConsumersRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\007",&SkypeFields[0], MsgconversationConversationAddConsumersRequest::BEGIN,&object_id,&identities);
        #        endif
}

bool Conversation::Assimilate(
        const ConversationRef& otherConversation,
        ConversationRef& conversation// new live conference
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationAssimilateRequest __request;
        __request.objectID= object_id;
        __request.otherConversation=otherConversation;
        bool __status = __session->call(4,"ZR\022\011",&SkypeFields[0], MsgconversationConversationAssimilateRequest::BEGIN, &__request,MsgconversationConversationAssimilateResponse::BEGIN, &conversation);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\022\011",&SkypeFields[0], MsgconversationConversationAssimilateRequest::BEGIN,&object_id,&otherConversation)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationConversationAssimilateResponse::BEGIN,&conversation);
                return __status;
        }
        return false;
        #        endif
}

bool Conversation::JoinLiveSession(
        const Sid::String accessToken// if starting a live session, allows to set a custom access token
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationJoinLiveSessionRequest __request;
        __request.objectID= object_id;
        __request.accessToken=accessToken;
        bool __status = __session->call(4,"ZR\022\012",&SkypeFields[0], MsgconversationConversationJoinLiveSessionRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\012",&SkypeFields[0], MsgconversationConversationJoinLiveSessionRequest::BEGIN,&object_id,&accessToken);
        #        endif
}

bool Conversation::RingOthers(
        const Sid::List_String identities,// Participants to ring. An empty list means ringing all participants of at least speaker level
        const bool videoCall,// Indicates that we want to do a video call (video still needs to be separately enabled)
        const Sid::String origin// When call is initiated from web link, must contain the URI that was used
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationRingOthersRequest __request;
        __request.objectID= object_id;
        __request.identities=identities;
        __request.videoCall=videoCall;
        __request.origin=origin;
        bool __status = __session->call(4,"ZR\022$",&SkypeFields[0], MsgconversationConversationRingOthersRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022$",&SkypeFields[0], MsgconversationConversationRingOthersRequest::BEGIN,&object_id,&identities,&videoCall,&origin);
        #        endif
}

bool Conversation::MuteMyMicrophone(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\022\013",&SkypeFields[0], MsgconversationConversationMuteMyMicrophoneRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\013",&SkypeFields[0], MsgconversationConversationMuteMyMicrophoneRequest::BEGIN,&object_id);
        #        endif
}

bool Conversation::UnmuteMyMicrophone(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\022\014",&SkypeFields[0], MsgconversationConversationUnmuteMyMicrophoneRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\014",&SkypeFields[0], MsgconversationConversationUnmuteMyMicrophoneRequest::BEGIN,&object_id);
        #        endif
}

bool Conversation::HoldMyLiveSession(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\022\015",&SkypeFields[0], MsgconversationConversationHoldMyLiveSessionRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\015",&SkypeFields[0], MsgconversationConversationHoldMyLiveSessionRequest::BEGIN,&object_id);
        #        endif
}

bool Conversation::ResumeMyLiveSession(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\022\016",&SkypeFields[0], MsgconversationConversationResumeMyLiveSessionRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\016",&SkypeFields[0], MsgconversationConversationResumeMyLiveSessionRequest::BEGIN,&object_id);
        #        endif
}

bool Conversation::LeaveLiveSession(
        const bool postVoiceAutoresponse
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationLeaveLiveSessionRequest __request;
        __request.objectID= object_id;
        __request.postVoiceAutoresponse=postVoiceAutoresponse;
        bool __status = __session->call(4,"ZR\022\017",&SkypeFields[0], MsgconversationConversationLeaveLiveSessionRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\017",&SkypeFields[0], MsgconversationConversationLeaveLiveSessionRequest::BEGIN,&object_id,&postVoiceAutoresponse);
        #        endif
}

bool Conversation::StartVoiceMessage(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\022-",&SkypeFields[0], MsgconversationConversationStartVoiceMessageRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022-",&SkypeFields[0], MsgconversationConversationStartVoiceMessageRequest::BEGIN,&object_id);
        #        endif
}

bool Conversation::TransferLiveSession(
        const Sid::List_String& identities,
        const Sid::String transferTopic
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationTransferLiveSessionRequest __request;
        __request.objectID= object_id;
        __request.identities=identities;
        __request.transferTopic=transferTopic;
        bool __status = __session->call(4,"ZR\022(",&SkypeFields[0], MsgconversationConversationTransferLiveSessionRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022(",&SkypeFields[0], MsgconversationConversationTransferLiveSessionRequest::BEGIN,&object_id,&identities,&transferTopic);
        #        endif
}

bool Conversation::CanTransferLiveSession(
        const Sid::String& identity,
        bool& result
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationCanTransferLiveSessionRequest __request;
        __request.objectID= object_id;
        __request.identity=identity;
        bool __status = __session->call(4,"ZR\022.",&SkypeFields[0], MsgconversationConversationCanTransferLiveSessionRequest::BEGIN, &__request,MsgconversationConversationCanTransferLiveSessionResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\022.",&SkypeFields[0], MsgconversationConversationCanTransferLiveSessionRequest::BEGIN,&object_id,&identity)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationConversationCanTransferLiveSessionResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool Conversation::SendDTMF(
        const Participant::DTMF& dtmf,
        const uint lengthInMS
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationSendDTMFRequest __request;
        __request.objectID= object_id;
        __request.dtmf=dtmf;
        __request.lengthInMS=lengthInMS;
        bool __status = __session->call(4,"ZR\022\020",&SkypeFields[0], MsgconversationConversationSendDTMFRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\020",&SkypeFields[0], MsgconversationConversationSendDTMFRequest::BEGIN,&object_id,&dtmf,&lengthInMS);
        #        endif
}

bool Conversation::StopSendDTMF(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\022\060",&SkypeFields[0], MsgconversationConversationStopSendDTMFRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\060",&SkypeFields[0], MsgconversationConversationStopSendDTMFRequest::BEGIN,&object_id);
        #        endif
}

bool Conversation::SetMyTextStatusTo(
        const Participant::TEXT_STATUS& status
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationSetMyTextStatusToRequest __request;
        __request.objectID= object_id;
        __request.status=status;
        bool __status = __session->call(4,"ZR\022\022",&SkypeFields[0], MsgconversationConversationSetMyTextStatusToRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\022",&SkypeFields[0], MsgconversationConversationSetMyTextStatusToRequest::BEGIN,&object_id,&status);
        #        endif
}

bool Conversation::PostText(
        const Sid::String& text,
        MessageRef& message,// resulting message if no error
        const bool isXML
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationPostTextRequest __request;
        __request.objectID= object_id;
        __request.text=text;
        __request.isXML=isXML;
        bool __status = __session->call(4,"ZR\022\023",&SkypeFields[0], MsgconversationConversationPostTextRequest::BEGIN, &__request,MsgconversationConversationPostTextResponse::BEGIN, &message);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\022\023",&SkypeFields[0], MsgconversationConversationPostTextRequest::BEGIN,&object_id,&text,&isXML)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationConversationPostTextResponse::BEGIN,&message);
                return __status;
        }
        return false;
        #        endif
}

bool Conversation::PostContacts(
        const ContactRefs& contacts
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationPostContactsRequest __request;
        __request.objectID= object_id;
        __request.contacts=contacts;
        bool __status = __session->call(4,"ZR\022\024",&SkypeFields[0], MsgconversationConversationPostContactsRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\024",&SkypeFields[0], MsgconversationConversationPostContactsRequest::BEGIN,&object_id,&contacts);
        #        endif
}

bool Conversation::PostFiles(
        const Sid::List_Filename& paths,
        const Sid::String& body,
        TRANSFER_SENDFILE_ERROR& error_code,
        Sid::Filename& error_file
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationPostFilesRequest __request;
        __request.objectID= object_id;
        __request.paths=paths;
        __request.body=body;
        MsgconversationConversationPostFilesResponse __response;
        bool __status = __session->call(4,"ZR\022\025",&SkypeFields[0], MsgconversationConversationPostFilesRequest::BEGIN, &__request,MsgconversationConversationPostFilesResponse::BEGIN, &__response);
        error_code=static_cast<TRANSFER_SENDFILE_ERROR>(__response.error_code);
        return __status;
        #        else
        int __rsp_error_code;
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\022\025",&SkypeFields[0], MsgconversationConversationPostFilesRequest::BEGIN,&object_id,&paths,&body)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationConversationPostFilesResponse::BEGIN,&__rsp_error_code,&error_file);
                error_code=static_cast<TRANSFER_SENDFILE_ERROR>(__rsp_error_code);
                return __status;
        }
        return false;
        #        endif
}

bool Conversation::PostVoiceMessage(
        const VoicemailRef& voicemail,// DEPRECATED, the method uses the conversation active_voicemail
        const Sid::String& body// Alternative text to send to clients not supporting displaying the POSTED_VOICE_MESSAGE message
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationPostVoiceMessageRequest __request;
        __request.objectID= object_id;
        __request.voicemail=voicemail;
        __request.body=body;
        bool __status = __session->call(4,"ZR\022\026",&SkypeFields[0], MsgconversationConversationPostVoiceMessageRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\026",&SkypeFields[0], MsgconversationConversationPostVoiceMessageRequest::BEGIN,&object_id,&voicemail,&body);
        #        endif
}

bool Conversation::PostSMS(
        const SmsRef& sms,
        const Sid::String& body
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationPostSMSRequest __request;
        __request.objectID= object_id;
        __request.sms=sms;
        __request.body=body;
        bool __status = __session->call(4,"ZR\022\027",&SkypeFields[0], MsgconversationConversationPostSMSRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\027",&SkypeFields[0], MsgconversationConversationPostSMSRequest::BEGIN,&object_id,&sms,&body);
        #        endif
}

bool Conversation::GetJoinBlob(
        Sid::String& blob
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\022\030",&SkypeFields[0], MsgconversationConversationGetJoinBlobRequest::BEGIN, &object_id,MsgconversationConversationGetJoinBlobResponse::BEGIN, &blob);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\022\030",&SkypeFields[0], MsgconversationConversationGetJoinBlobRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationConversationGetJoinBlobResponse::BEGIN,&blob);
                return __status;
        }
        return false;
        #        endif
}

bool Conversation::Join(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\022\031",&SkypeFields[0], MsgconversationConversationJoinRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\031",&SkypeFields[0], MsgconversationConversationJoinRequest::BEGIN,&object_id);
        #        endif
}

bool Conversation::EnterPassword(
        const Sid::String& password
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationEnterPasswordRequest __request;
        __request.objectID= object_id;
        __request.password=password;
        bool __status = __session->call(4,"ZR\022\032",&SkypeFields[0], MsgconversationConversationEnterPasswordRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\032",&SkypeFields[0], MsgconversationConversationEnterPasswordRequest::BEGIN,&object_id,&password);
        #        endif
}

bool Conversation::SetPassword(
        const Sid::String& password,
        const Sid::String& hint
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationSetPasswordRequest __request;
        __request.objectID= object_id;
        __request.password=password;
        __request.hint=hint;
        bool __status = __session->call(4,"ZR\022\033",&SkypeFields[0], MsgconversationConversationSetPasswordRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\033",&SkypeFields[0], MsgconversationConversationSetPasswordRequest::BEGIN,&object_id,&password,&hint);
        #        endif
}

bool Conversation::RetireFrom(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\022\034",&SkypeFields[0], MsgconversationConversationRetireFromRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\034",&SkypeFields[0], MsgconversationConversationRetireFromRequest::BEGIN,&object_id);
        #        endif
}

bool Conversation::Delete(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\022/",&SkypeFields[0], MsgconversationConversationDeleteRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022/",&SkypeFields[0], MsgconversationConversationDeleteRequest::BEGIN,&object_id);
        #        endif
}

bool Conversation::RenameTo(
        const Sid::String& name// empty name unsets the local name
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationRenameToRequest __request;
        __request.objectID= object_id;
        __request.name=name;
        bool __status = __session->call(4,"ZR\022\035",&SkypeFields[0], MsgconversationConversationRenameToRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\035",&SkypeFields[0], MsgconversationConversationRenameToRequest::BEGIN,&object_id,&name);
        #        endif
}

bool Conversation::SetBookmark(
        const bool& bookmark
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationSetBookmarkRequest __request;
        __request.objectID= object_id;
        __request.bookmark=bookmark;
        bool __status = __session->call(4,"ZR\022\036",&SkypeFields[0], MsgconversationConversationSetBookmarkRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\036",&SkypeFields[0], MsgconversationConversationSetBookmarkRequest::BEGIN,&object_id,&bookmark);
        #        endif
}

bool Conversation::SetAlertString(
        const Sid::String& alertString
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationSetAlertStringRequest __request;
        __request.objectID= object_id;
        __request.alertString=alertString;
        bool __status = __session->call(4,"ZR\022\037",&SkypeFields[0], MsgconversationConversationSetAlertStringRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\037",&SkypeFields[0], MsgconversationConversationSetAlertStringRequest::BEGIN,&object_id,&alertString);
        #        endif
}

bool Conversation::RemoveFromInbox(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\022 ",&SkypeFields[0], MsgconversationConversationRemoveFromInboxRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022 ",&SkypeFields[0], MsgconversationConversationRemoveFromInboxRequest::BEGIN,&object_id);
        #        endif
}

bool Conversation::AddToInbox(
        const uint timestamp// 0 means the inbox_timstamp will be set to now
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationAddToInboxRequest __request;
        __request.objectID= object_id;
        __request.timestamp=timestamp;
        bool __status = __session->call(4,"ZR\022!",&SkypeFields[0], MsgconversationConversationAddToInboxRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022!",&SkypeFields[0], MsgconversationConversationAddToInboxRequest::BEGIN,&object_id,&timestamp);
        #        endif
}

bool Conversation::SetConsumedHorizon(
        const uint& timestamp,
        const bool also_unconsume// if true, also unconsumes newer messages
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationSetConsumedHorizonRequest __request;
        __request.objectID= object_id;
        __request.timestamp=timestamp;
        __request.also_unconsume=also_unconsume;
        bool __status = __session->call(4,"ZR\022\042",&SkypeFields[0], MsgconversationConversationSetConsumedHorizonRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022\042",&SkypeFields[0], MsgconversationConversationSetConsumedHorizonRequest::BEGIN,&object_id,&timestamp,&also_unconsume);
        #        endif
}

bool Conversation::MarkUnread(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\022#",&SkypeFields[0], MsgconversationConversationMarkUnreadRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\022#",&SkypeFields[0], MsgconversationConversationMarkUnreadRequest::BEGIN,&object_id);
        #        endif
}

bool Conversation::IsMemberOf(
        const ContactGroupRef& group,
        bool& result
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationIsMemberOfRequest __request;
        __request.objectID= object_id;
        __request.group=group;
        bool __status = __session->call(4,"ZR\022%",&SkypeFields[0], MsgconversationConversationIsMemberOfRequest::BEGIN, &__request,MsgconversationConversationIsMemberOfResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\022%",&SkypeFields[0], MsgconversationConversationIsMemberOfRequest::BEGIN,&object_id,&group)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationConversationIsMemberOfResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool Conversation::GetParticipants(
        ParticipantRefs& participants,
        const Conversation::PARTICIPANTFILTER filter
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationGetParticipantsRequest __request;
        __request.objectID= object_id;
        __request.filter=filter;
        bool __status = __session->call(4,"ZR\022&",&SkypeFields[0], MsgconversationConversationGetParticipantsRequest::BEGIN, &__request,MsgconversationConversationGetParticipantsResponse::BEGIN, &participants);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\022&",&SkypeFields[0], MsgconversationConversationGetParticipantsRequest::BEGIN,&object_id,&filter)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationConversationGetParticipantsResponse::BEGIN,&participants);
                return __status;
        }
        return false;
        #        endif
}

bool Conversation::GetLastMessages(
        MessageRefs& contextMessages,// Already consumed messages, provided for context
        MessageRefs& unconsumedMessages,// Unconsumed messages
        const uint requireTimestamp// If set returns message from at least this timestamp, if not, include last 24 hours messages
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationGetLastMessagesRequest __request;
        __request.objectID= object_id;
        __request.requireTimestamp=requireTimestamp;
        MsgconversationConversationGetLastMessagesResponse __response;
        bool __status = __session->call(4,"ZR\022'",&SkypeFields[0], MsgconversationConversationGetLastMessagesRequest::BEGIN, &__request,MsgconversationConversationGetLastMessagesResponse::BEGIN, &__response);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\022'",&SkypeFields[0], MsgconversationConversationGetLastMessagesRequest::BEGIN,&object_id,&requireTimestamp)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationConversationGetLastMessagesResponse::BEGIN,&contextMessages,&unconsumedMessages);
                return __status;
        }
        return false;
        #        endif
}

bool Conversation::FindMessage(
        const Sid::String& text,
        MessageRef& message,
        const uint fromTimestampUp
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationConversationFindMessageRequest __request;
        __request.objectID= object_id;
        __request.text=text;
        __request.fromTimestampUp=fromTimestampUp;
        bool __status = __session->call(4,"ZR\022)",&SkypeFields[0], MsgconversationConversationFindMessageRequest::BEGIN, &__request,MsgconversationConversationFindMessageResponse::BEGIN, &message);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\022)",&SkypeFields[0], MsgconversationConversationFindMessageRequest::BEGIN,&object_id,&text,&fromTimestampUp)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationConversationFindMessageResponse::BEGIN,&message);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::CreateConference(
        ConversationRef& conference
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\015",&SkypeFields[0], 0,0,MsgconversationCreateConferenceResponse::BEGIN, &conference);
        return __status;
        #        else
        bool __status = __session->call_0n(4,"ZR\000\015",&SkypeFields[0],MsgconversationCreateConferenceResponse::BEGIN,&conference);
        return __status;
        #        endif
}

bool Skype::GetConversationByIdentity(
        const Sid::String& convoIdentity,
        ConversationRef& conversation
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\017",&SkypeFields[0], MsgconversationGetConversationByIdentityRequest::BEGIN, &convoIdentity,MsgconversationGetConversationByIdentityResponse::BEGIN, &conversation);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000\017",&SkypeFields[0], MsgconversationGetConversationByIdentityRequest::BEGIN,&convoIdentity)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationGetConversationByIdentityResponse::BEGIN,&conversation);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::GetConversationByParticipants(
        const Sid::List_String& participantIdentities,
        ConversationRef& conversation,
        const bool createIfNonExisting,
        const bool ignoreBookmarkedOrNamed
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationGetConversationByParticipantsRequest __request;
        __request.participantIdentities=participantIdentities;
        __request.createIfNonExisting=createIfNonExisting;
        __request.ignoreBookmarkedOrNamed=ignoreBookmarkedOrNamed;
        bool __status = __session->call(4,"ZR\000\020",&SkypeFields[0], MsgconversationGetConversationByParticipantsRequest::BEGIN, &__request,MsgconversationGetConversationByParticipantsResponse::BEGIN, &conversation);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000\020",&SkypeFields[0], MsgconversationGetConversationByParticipantsRequest::BEGIN,&participantIdentities,&createIfNonExisting,&ignoreBookmarkedOrNamed)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationGetConversationByParticipantsResponse::BEGIN,&conversation);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::GetConversationByBlob(
        const Sid::String& joinBlob,
        ConversationRef& conversation,
        const bool alsoJoin
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationGetConversationByBlobRequest __request;
        __request.joinBlob=joinBlob;
        __request.alsoJoin=alsoJoin;
        bool __status = __session->call(4,"ZR\000\021",&SkypeFields[0], MsgconversationGetConversationByBlobRequest::BEGIN, &__request,MsgconversationGetConversationByBlobResponse::BEGIN, &conversation);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000\021",&SkypeFields[0], MsgconversationGetConversationByBlobRequest::BEGIN,&joinBlob,&alsoJoin)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationGetConversationByBlobResponse::BEGIN,&conversation);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::GetConversationList(
        ConversationRefs& conversations,
        const Conversation::LIST_TYPE type
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\022",&SkypeFields[0], MsgconversationGetConversationListRequest::BEGIN, &type,MsgconversationGetConversationListResponse::BEGIN, &conversations);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000\022",&SkypeFields[0], MsgconversationGetConversationListRequest::BEGIN,&type)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationGetConversationListResponse::BEGIN,&conversations);
                return __status;
        }
        return false;
        #        endif
}

bool Message::CanEdit(
        bool& result
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\011\001",&SkypeFields[0], MsgconversationMessageCanEditRequest::BEGIN, &object_id,MsgconversationMessageCanEditResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\011\001",&SkypeFields[0], MsgconversationMessageCanEditRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationMessageCanEditResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool Message::Edit(
        const Sid::String& newText,
        const bool isXML
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationMessageEditRequest __request;
        __request.objectID= object_id;
        __request.newText=newText;
        __request.isXML=isXML;
        bool __status = __session->call(4,"ZR\011\002",&SkypeFields[0], MsgconversationMessageEditRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\011\002",&SkypeFields[0], MsgconversationMessageEditRequest::BEGIN,&object_id,&newText,&isXML);
        #        endif
}

bool Message::GetContacts(
        ContactRefs& contacts
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\011\003",&SkypeFields[0], MsgconversationMessageGetContactsRequest::BEGIN, &object_id,MsgconversationMessageGetContactsResponse::BEGIN, &contacts);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\011\003",&SkypeFields[0], MsgconversationMessageGetContactsRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationMessageGetContactsResponse::BEGIN,&contacts);
                return __status;
        }
        return false;
        #        endif
}

bool Message::GetTransfers(
        TransferRefs& transfers
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\011\004",&SkypeFields[0], MsgconversationMessageGetTransfersRequest::BEGIN, &object_id,MsgconversationMessageGetTransfersResponse::BEGIN, &transfers);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\011\004",&SkypeFields[0], MsgconversationMessageGetTransfersRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationMessageGetTransfersResponse::BEGIN,&transfers);
                return __status;
        }
        return false;
        #        endif
}

bool Message::GetVoiceMessage(
        VoicemailRef& voicemail
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\011\005",&SkypeFields[0], MsgconversationMessageGetVoiceMessageRequest::BEGIN, &object_id,MsgconversationMessageGetVoiceMessageResponse::BEGIN, &voicemail);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\011\005",&SkypeFields[0], MsgconversationMessageGetVoiceMessageRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationMessageGetVoiceMessageResponse::BEGIN,&voicemail);
                return __status;
        }
        return false;
        #        endif
}

bool Message::GetSMS(
        SmsRef& sms
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\011\006",&SkypeFields[0], MsgconversationMessageGetSMSRequest::BEGIN, &object_id,MsgconversationMessageGetSMSResponse::BEGIN, &sms);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\011\006",&SkypeFields[0], MsgconversationMessageGetSMSRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationMessageGetSMSResponse::BEGIN,&sms);
                return __status;
        }
        return false;
        #        endif
}

bool Message::DeleteLocally(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\011\010",&SkypeFields[0], MsgconversationMessageDeleteLocallyRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\011\010",&SkypeFields[0], MsgconversationMessageDeleteLocallyRequest::BEGIN,&object_id);
        #        endif
}

bool Skype::GetMessageByGuid(
        const Sid::Binary& guid,
        MessageRef& message
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\025",&SkypeFields[0], MsgconversationGetMessageByGuidRequest::BEGIN, &guid,MsgconversationGetMessageByGuidResponse::BEGIN, &message);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000\025",&SkypeFields[0], MsgconversationGetMessageByGuidRequest::BEGIN,&guid)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationGetMessageByGuidResponse::BEGIN,&message);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::GetMessageListByType(
        const Message::TYPE& type,// Type of messages requested
        const bool& latestPerConvOnly,// Whether to return only the most recent message per conversation
        MessageRefs& messages,
        const uint fromTimestampInc,// Starting timestamp for reqested range, inclusive
        const uint toTimestampExc// Ending timestamp for requested range, exclusive
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgconversationGetMessageListByTypeRequest __request;
        __request.type=type;
        __request.latestPerConvOnly=latestPerConvOnly;
        __request.fromTimestampInc=fromTimestampInc;
        __request.toTimestampExc=toTimestampExc;
        bool __status = __session->call(5,"ZR\000\210\001",&SkypeFields[0], MsgconversationGetMessageListByTypeRequest::BEGIN, &__request,MsgconversationGetMessageListByTypeResponse::BEGIN, &messages);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,5,"ZR\000\210\001",&SkypeFields[0], MsgconversationGetMessageListByTypeRequest::BEGIN,&type,&latestPerConvOnly,&fromTimestampInc,&toTimestampExc)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgconversationGetMessageListByTypeResponse::BEGIN,&messages);
                return __status;
        }
        return false;
        #        endif
}

bool Video::SetScreen(
        const uint& windowh
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgvideoVideoSetScreenRequest __request;
        __request.objectID= object_id;
        __request.windowh=windowh;
        bool __status = __session->call(4,"ZR\013\001",&SkypeFields[0], MsgvideoVideoSetScreenRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\013\001",&SkypeFields[0], MsgvideoVideoSetScreenRequest::BEGIN,&object_id,&windowh);
        #        endif
}

bool Video::Start(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\013\002",&SkypeFields[0], MsgvideoVideoStartRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\013\002",&SkypeFields[0], MsgvideoVideoStartRequest::BEGIN,&object_id);
        #        endif
}

bool Video::Stop(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\013\003",&SkypeFields[0], MsgvideoVideoStopRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\013\003",&SkypeFields[0], MsgvideoVideoStopRequest::BEGIN,&object_id);
        #        endif
}

bool Video::SubmitCaptureRequest(
        bool& ret,
        uint& requestId
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgvideoVideoSubmitCaptureRequestResponse __response;
        bool __status = __session->call(4,"ZR\013\013",&SkypeFields[0], MsgvideoVideoSubmitCaptureRequestRequest::BEGIN, &object_id,MsgvideoVideoSubmitCaptureRequestResponse::BEGIN, &__response);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\013\013",&SkypeFields[0], MsgvideoVideoSubmitCaptureRequestRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgvideoVideoSubmitCaptureRequestResponse::BEGIN,&ret,&requestId);
                return __status;
        }
        return false;
        #        endif
}

bool Video::SetScreenCaptureRectangle(
        const int& x0,
        const int& y0,
        const uint& width,
        const uint& height,
        const int monitorNumber,
        const uint windowHandle
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgvideoVideoSetScreenCaptureRectangleRequest __request;
        __request.objectID= object_id;
        __request.x0=x0;
        __request.y0=y0;
        __request.width=width;
        __request.height=height;
        __request.monitorNumber=monitorNumber;
        __request.windowHandle=windowHandle;
        bool __status = __session->call(4,"ZR\013\005",&SkypeFields[0], MsgvideoVideoSetScreenCaptureRectangleRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\013\005",&SkypeFields[0], MsgvideoVideoSetScreenCaptureRectangleRequest::BEGIN,&object_id,&x0,&y0,&width,&height,&monitorNumber,&windowHandle);
        #        endif
}

bool Video::SetRenderRectangle(
        const int& x0,
        const int& y0,
        const uint& width,
        const uint& height
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgvideoVideoSetRenderRectangleRequest __request;
        __request.objectID= object_id;
        __request.x0=x0;
        __request.y0=y0;
        __request.width=width;
        __request.height=height;
        bool __status = __session->call(4,"ZR\013\006",&SkypeFields[0], MsgvideoVideoSetRenderRectangleRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\013\006",&SkypeFields[0], MsgvideoVideoSetRenderRectangleRequest::BEGIN,&object_id,&x0,&y0,&width,&height);
        #        endif
}

bool Video::SelectVideoSource(
        const Video::MEDIATYPE& mediaType,
        const Sid::String webcamName,
        const Sid::String devicePath,
        const bool updateSetup
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgvideoVideoSelectVideoSourceRequest __request;
        __request.objectID= object_id;
        __request.mediaType=mediaType;
        __request.webcamName=webcamName;
        __request.devicePath=devicePath;
        __request.updateSetup=updateSetup;
        bool __status = __session->call(4,"ZR\013\007",&SkypeFields[0], MsgvideoVideoSelectVideoSourceRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\013\007",&SkypeFields[0], MsgvideoVideoSelectVideoSourceRequest::BEGIN,&object_id,&mediaType,&webcamName,&devicePath,&updateSetup);
        #        endif
}

bool Video::GetCurrentVideoDevice(
        MEDIATYPE& mediatype,
        Sid::String& deviceName,
        Sid::String& devicePath
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgvideoVideoGetCurrentVideoDeviceResponse __response;
        bool __status = __session->call(4,"ZR\013\012",&SkypeFields[0], MsgvideoVideoGetCurrentVideoDeviceRequest::BEGIN, &object_id,MsgvideoVideoGetCurrentVideoDeviceResponse::BEGIN, &__response);
        mediatype=static_cast<MEDIATYPE>(__response.mediatype);
        return __status;
        #        else
        int __rsp_mediatype;
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\013\012",&SkypeFields[0], MsgvideoVideoGetCurrentVideoDeviceRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgvideoVideoGetCurrentVideoDeviceResponse::BEGIN,&__rsp_mediatype,&deviceName,&devicePath);
                mediatype=static_cast<MEDIATYPE>(__rsp_mediatype);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::GetAvailableVideoDevices(
        Sid::List_String& deviceNames,
        Sid::List_String& devicePaths,
        uint& count
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000P",&SkypeFields[0], 0,0,0,0);
        return __status;
        #        else
        bool __status = __session->call_0n(4,"ZR\000P",&SkypeFields[0],MsgvideoGetAvailableVideoDevicesResponse::BEGIN,&deviceNames,&devicePaths,&count);
        return __status;
        #        endif
}

bool Skype::HasVideoDeviceCapability(
        const Sid::String& deviceName,
        const Sid::String& devicePath,
        const Video::VIDEO_DEVICE_CAPABILITY& cap
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgvideoHasVideoDeviceCapabilityRequest __request;
        __request.deviceName=deviceName;
        __request.devicePath=devicePath;
        __request.cap=cap;
        bool __status = __session->call(4,"ZR\000!",&SkypeFields[0], MsgvideoHasVideoDeviceCapabilityRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\000!",&SkypeFields[0], MsgvideoHasVideoDeviceCapabilityRequest::BEGIN,&deviceName,&devicePath,&cap);
        #        endif
}

bool Skype::DisplayVideoDeviceTuningDialog(
        const Sid::String& deviceName,
        const Sid::String& devicePath
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgvideoDisplayVideoDeviceTuningDialogRequest __request;
        __request.deviceName=deviceName;
        __request.devicePath=devicePath;
        bool __status = __session->call(4,"ZR\000\042",&SkypeFields[0], MsgvideoDisplayVideoDeviceTuningDialogRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\000\042",&SkypeFields[0], MsgvideoDisplayVideoDeviceTuningDialogRequest::BEGIN,&deviceName,&devicePath);
        #        endif
}

bool Skype::GetPreviewVideo(
        const Video::MEDIATYPE& type,
        VideoRef& video,
        const Sid::String deviceName,// name and path to be used only with media type VIDEO
        const Sid::String devicePath
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgvideoGetPreviewVideoRequest __request;
        __request.type=type;
        __request.deviceName=deviceName;
        __request.devicePath=devicePath;
        bool __status = __session->call(4,"ZR\000#",&SkypeFields[0], MsgvideoGetPreviewVideoRequest::BEGIN, &__request,MsgvideoGetPreviewVideoResponse::BEGIN, &video);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000#",&SkypeFields[0], MsgvideoGetPreviewVideoRequest::BEGIN,&type,&deviceName,&devicePath)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgvideoGetPreviewVideoResponse::BEGIN,&video);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::VideoCommand(
        const Sid::String& command,
        Sid::String& response
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000;",&SkypeFields[0], MsgvideoVideoCommandRequest::BEGIN, &command,MsgvideoVideoCommandResponse::BEGIN, &response);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000;",&SkypeFields[0], MsgvideoVideoCommandRequest::BEGIN,&command)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgvideoVideoCommandResponse::BEGIN,&response);
                return __status;
        }
        return false;
        #        endif
}

bool Voicemail::StartRecording(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\007\003",&SkypeFields[0], MsgvmVoicemailStartRecordingRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\007\003",&SkypeFields[0], MsgvmVoicemailStartRecordingRequest::BEGIN,&object_id);
        #        endif
}

bool Voicemail::StopRecording(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\007\004",&SkypeFields[0], MsgvmVoicemailStopRecordingRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\007\004",&SkypeFields[0], MsgvmVoicemailStopRecordingRequest::BEGIN,&object_id);
        #        endif
}

bool Voicemail::StartPlayback(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\007\005",&SkypeFields[0], MsgvmVoicemailStartPlaybackRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\007\005",&SkypeFields[0], MsgvmVoicemailStartPlaybackRequest::BEGIN,&object_id);
        #        endif
}

bool Voicemail::StopPlayback(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\007\006",&SkypeFields[0], MsgvmVoicemailStopPlaybackRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\007\006",&SkypeFields[0], MsgvmVoicemailStopPlaybackRequest::BEGIN,&object_id);
        #        endif
}

bool Voicemail::Delete(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\007\007",&SkypeFields[0], MsgvmVoicemailDeleteRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\007\007",&SkypeFields[0], MsgvmVoicemailDeleteRequest::BEGIN,&object_id);
        #        endif
}

bool Voicemail::Cancel(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\007\010",&SkypeFields[0], MsgvmVoicemailCancelRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\007\010",&SkypeFields[0], MsgvmVoicemailCancelRequest::BEGIN,&object_id);
        #        endif
}

bool Voicemail::CheckPermission(
        bool& result
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\007\015",&SkypeFields[0], MsgvmVoicemailCheckPermissionRequest::BEGIN, &object_id,MsgvmVoicemailCheckPermissionResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\007\015",&SkypeFields[0], MsgvmVoicemailCheckPermissionRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgvmVoicemailCheckPermissionResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::GetGreeting(
        const Sid::String& skypeName,
        VoicemailRef& greeting
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000-",&SkypeFields[0], MsgvmGetGreetingRequest::BEGIN, &skypeName,MsgvmGetGreetingResponse::BEGIN, &greeting);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000-",&SkypeFields[0], MsgvmGetGreetingRequest::BEGIN,&skypeName)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgvmGetGreetingResponse::BEGIN,&greeting);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::PlayStart(
        const uint& soundid,
        const Sid::Binary& sound,
        const bool& loop,
        const bool useCallOutDevice
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaudioPlayStartRequest __request;
        __request.soundid=soundid;
        __request.sound=sound;
        __request.loop=loop;
        __request.useCallOutDevice=useCallOutDevice;
        bool __status = __session->call(4,"ZR\000\060",&SkypeFields[0], MsgaudioPlayStartRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\000\060",&SkypeFields[0], MsgaudioPlayStartRequest::BEGIN,&soundid,&sound,&loop,&useCallOutDevice);
        #        endif
}

bool Skype::PlayStartFromFile(
        const uint& soundid,
        const Sid::Filename& datafile,
        const bool& loop,
        PREPARESOUNDRESULT& result,
        const bool useCallOutDevice
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaudioPlayStartFromFileRequest __request;
        __request.soundid=soundid;
        __request.datafile=datafile;
        __request.loop=loop;
        __request.useCallOutDevice=useCallOutDevice;
        bool __status = __session->call(5,"ZR\000\324\001",&SkypeFields[0], MsgaudioPlayStartFromFileRequest::BEGIN, &__request,MsgaudioPlayStartFromFileResponse::BEGIN, &result);
        return __status;
        #        else
        int __rsp_result;
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,5,"ZR\000\324\001",&SkypeFields[0], MsgaudioPlayStartFromFileRequest::BEGIN,&soundid,&datafile,&loop,&useCallOutDevice)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgaudioPlayStartFromFileResponse::BEGIN,&__rsp_result);
                result=static_cast<PREPARESOUNDRESULT>(__rsp_result);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::PlayStop(
        const uint& soundid
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\061",&SkypeFields[0], MsgaudioPlayStopRequest::BEGIN, &soundid,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\000\061",&SkypeFields[0], MsgaudioPlayStopRequest::BEGIN,&soundid);
        #        endif
}

bool Skype::StartRecordingTest(
        const bool recordAndPlaybackData
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\062",&SkypeFields[0], MsgaudioStartRecordingTestRequest::BEGIN, &recordAndPlaybackData,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\000\062",&SkypeFields[0], MsgaudioStartRecordingTestRequest::BEGIN,&recordAndPlaybackData);
        #        endif
}

bool Skype::StopRecordingTest(
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\063",&SkypeFields[0], 0,0,0,0);
        return __status;
        #        else
        return __session->call_00(4,"ZR\000\063");
        #        endif
}

bool Skype::GetAvailableOutputDevices(
        Sid::List_String& handleList,
        Sid::List_String& nameList,
        Sid::List_String& productIdList
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\065",&SkypeFields[0], 0,0,0,0);
        return __status;
        #        else
        bool __status = __session->call_0n(4,"ZR\000\065",&SkypeFields[0],MsgaudioGetAvailableOutputDevicesResponse::BEGIN,&handleList,&nameList,&productIdList);
        return __status;
        #        endif
}

bool Skype::GetAvailableRecordingDevices(
        Sid::List_String& handleList,
        Sid::List_String& nameList,
        Sid::List_String& productIdList
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\066",&SkypeFields[0], 0,0,0,0);
        return __status;
        #        else
        bool __status = __session->call_0n(4,"ZR\000\066",&SkypeFields[0],MsgaudioGetAvailableRecordingDevicesResponse::BEGIN,&handleList,&nameList,&productIdList);
        return __status;
        #        endif
}

bool Skype::SelectSoundDevices(
        const Sid::String& callInDevice,
        const Sid::String& callOutDevice,
        const Sid::String& waveOutDevice
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaudioSelectSoundDevicesRequest __request;
        __request.callInDevice=callInDevice;
        __request.callOutDevice=callOutDevice;
        __request.waveOutDevice=waveOutDevice;
        bool __status = __session->call(4,"ZR\000\067",&SkypeFields[0], MsgaudioSelectSoundDevicesRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\000\067",&SkypeFields[0], MsgaudioSelectSoundDevicesRequest::BEGIN,&callInDevice,&callOutDevice,&waveOutDevice);
        #        endif
}

bool Skype::GetAudioDeviceCapabilities(
        const Sid::String& deviceHandle,
        Sid::String& interfaceString,
        uint& capabilities// bit set of AUDIODEVICE_CAPABILITIES
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaudioGetAudioDeviceCapabilitiesResponse __response;
        bool __status = __session->call(4,"ZR\000\070",&SkypeFields[0], MsgaudioGetAudioDeviceCapabilitiesRequest::BEGIN, &deviceHandle,MsgaudioGetAudioDeviceCapabilitiesResponse::BEGIN, &__response);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000\070",&SkypeFields[0], MsgaudioGetAudioDeviceCapabilitiesRequest::BEGIN,&deviceHandle)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgaudioGetAudioDeviceCapabilitiesResponse::BEGIN,&interfaceString,&capabilities);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::GetNrgLevels(
        uint& micLevel,
        uint& speakerLevel
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\071",&SkypeFields[0], 0,0,0,0);
        return __status;
        #        else
        bool __status = __session->call_0n(4,"ZR\000\071",&SkypeFields[0],MsgaudioGetNrgLevelsResponse::BEGIN,&micLevel,&speakerLevel);
        return __status;
        #        endif
}

bool Skype::VoiceCommand(
        const Sid::String& command,
        Sid::String& response
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000:",&SkypeFields[0], MsgaudioVoiceCommandRequest::BEGIN, &command,MsgaudioVoiceCommandResponse::BEGIN, &response);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000:",&SkypeFields[0], MsgaudioVoiceCommandRequest::BEGIN,&command)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgaudioVoiceCommandResponse::BEGIN,&response);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::GetSpeakerVolume(
        uint& volume
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000<",&SkypeFields[0], 0,0,MsgaudioGetSpeakerVolumeResponse::BEGIN, &volume);
        return __status;
        #        else
        bool __status = __session->call_0n(4,"ZR\000<",&SkypeFields[0],MsgaudioGetSpeakerVolumeResponse::BEGIN,&volume);
        return __status;
        #        endif
}

bool Skype::SetSpeakerVolume(
        const uint& volume
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000=",&SkypeFields[0], MsgaudioSetSpeakerVolumeRequest::BEGIN, &volume,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\000=",&SkypeFields[0], MsgaudioSetSpeakerVolumeRequest::BEGIN,&volume);
        #        endif
}

bool Skype::GetMicVolume(
        uint& micVolume
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000>",&SkypeFields[0], 0,0,MsgaudioGetMicVolumeResponse::BEGIN, &micVolume);
        return __status;
        #        else
        bool __status = __session->call_0n(4,"ZR\000>",&SkypeFields[0],MsgaudioGetMicVolumeResponse::BEGIN,&micVolume);
        return __status;
        #        endif
}

bool Skype::SetMicVolume(
        const uint& volume
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000?",&SkypeFields[0], MsgaudioSetMicVolumeRequest::BEGIN, &volume,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\000?",&SkypeFields[0], MsgaudioSetMicVolumeRequest::BEGIN,&volume);
        #        endif
}

bool Skype::IsSpeakerMuted(
        bool& muted
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000@",&SkypeFields[0], 0,0,MsgaudioIsSpeakerMutedResponse::BEGIN, &muted);
        return __status;
        #        else
        bool __status = __session->call_0n(4,"ZR\000@",&SkypeFields[0],MsgaudioIsSpeakerMutedResponse::BEGIN,&muted);
        return __status;
        #        endif
}

bool Skype::IsMicrophoneMuted(
        bool& muted
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\101",&SkypeFields[0], 0,0,MsgaudioIsMicrophoneMutedResponse::BEGIN, &muted);
        return __status;
        #        else
        bool __status = __session->call_0n(4,"ZR\000\101",&SkypeFields[0],MsgaudioIsMicrophoneMutedResponse::BEGIN,&muted);
        return __status;
        #        endif
}

bool Skype::MuteSpeakers(
        const bool& mute
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\102",&SkypeFields[0], MsgaudioMuteSpeakersRequest::BEGIN, &mute,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\000\102",&SkypeFields[0], MsgaudioMuteSpeakersRequest::BEGIN,&mute);
        #        endif
}

bool Skype::MuteMicrophone(
        const bool& mute
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\103",&SkypeFields[0], MsgaudioMuteMicrophoneRequest::BEGIN, &mute,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\000\103",&SkypeFields[0], MsgaudioMuteMicrophoneRequest::BEGIN,&mute);
        #        endif
}

bool Skype::SetOperatingMedia(
        const OPERATING_MEDIA& media,
        const uint& maxUplinkBps,
        const uint& maxDownlinkBps
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgbwmSetOperatingMediaRequest __request;
        __request.media=media;
        __request.maxUplinkBps=maxUplinkBps;
        __request.maxDownlinkBps=maxDownlinkBps;
        bool __status = __session->call(5,"ZR\000\377\001",&SkypeFields[0], MsgbwmSetOperatingMediaRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(5,"ZR\000\377\001",&SkypeFields[0], MsgbwmSetOperatingMediaRequest::BEGIN,&media,&maxUplinkBps,&maxDownlinkBps);
        #        endif
}

bool Sms::GetTargetStatus(
        const Sid::String& target,
        TARGETSTATUS& status
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgsmsSmsGetTargetStatusRequest __request;
        __request.objectID= object_id;
        __request.target=target;
        bool __status = __session->call(4,"ZR\014\004",&SkypeFields[0], MsgsmsSmsGetTargetStatusRequest::BEGIN, &__request,MsgsmsSmsGetTargetStatusResponse::BEGIN, &status);
        return __status;
        #        else
        int __rsp_status;
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\014\004",&SkypeFields[0], MsgsmsSmsGetTargetStatusRequest::BEGIN,&object_id,&target)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgsmsSmsGetTargetStatusResponse::BEGIN,&__rsp_status);
                status=static_cast<TARGETSTATUS>(__rsp_status);
                return __status;
        }
        return false;
        #        endif
}

bool Sms::GetTargetPrice(
        const Sid::String& target,
        uint& price
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgsmsSmsGetTargetPriceRequest __request;
        __request.objectID= object_id;
        __request.target=target;
        bool __status = __session->call(4,"ZR\014\015",&SkypeFields[0], MsgsmsSmsGetTargetPriceRequest::BEGIN, &__request,MsgsmsSmsGetTargetPriceResponse::BEGIN, &price);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\014\015",&SkypeFields[0], MsgsmsSmsGetTargetPriceRequest::BEGIN,&object_id,&target)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgsmsSmsGetTargetPriceResponse::BEGIN,&price);
                return __status;
        }
        return false;
        #        endif
}

bool Sms::SetTargets(
        const Sid::List_String& numbers,
        bool& success// false if some targets are not valid pstn-numbers
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgsmsSmsSetTargetsRequest __request;
        __request.objectID= object_id;
        __request.numbers=numbers;
        bool __status = __session->call(4,"ZR\014\006",&SkypeFields[0], MsgsmsSmsSetTargetsRequest::BEGIN, &__request,MsgsmsSmsSetTargetsResponse::BEGIN, &success);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\014\006",&SkypeFields[0], MsgsmsSmsSetTargetsRequest::BEGIN,&object_id,&numbers)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgsmsSmsSetTargetsResponse::BEGIN,&success);
                return __status;
        }
        return false;
        #        endif
}

bool Sms::SetBody(
        const Sid::String& text,
        SETBODYRESULT& result,
        Sid::List_String& chunks,
        uint& charsUntilNextChunk
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgsmsSmsSetBodyRequest __request;
        __request.objectID= object_id;
        __request.text=text;
        MsgsmsSmsSetBodyResponse __response;
        bool __status = __session->call(4,"ZR\014\007",&SkypeFields[0], MsgsmsSmsSetBodyRequest::BEGIN, &__request,MsgsmsSmsSetBodyResponse::BEGIN, &__response);
        result=static_cast<SETBODYRESULT>(__response.result);
        return __status;
        #        else
        int __rsp_result;
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\014\007",&SkypeFields[0], MsgsmsSmsSetBodyRequest::BEGIN,&object_id,&text)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgsmsSmsSetBodyResponse::BEGIN,&__rsp_result,&chunks,&charsUntilNextChunk);
                result=static_cast<SETBODYRESULT>(__rsp_result);
                return __status;
        }
        return false;
        #        endif
}

bool Sms::GetBodyChunks(
        Sid::List_String& textChunks,
        uint& charsUntilNextChunk
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgsmsSmsGetBodyChunksResponse __response;
        bool __status = __session->call(4,"ZR\014\010",&SkypeFields[0], MsgsmsSmsGetBodyChunksRequest::BEGIN, &object_id,MsgsmsSmsGetBodyChunksResponse::BEGIN, &__response);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\014\010",&SkypeFields[0], MsgsmsSmsGetBodyChunksRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgsmsSmsGetBodyChunksResponse::BEGIN,&textChunks,&charsUntilNextChunk);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::RequestConfirmationCode(
        const Sms::CONFIRM_TYPE& type,
        const Sid::String& number,
        SmsRef& sms
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgsmsRequestConfirmationCodeRequest __request;
        __request.type=type;
        __request.number=number;
        bool __status = __session->call(4,"ZR\000\035",&SkypeFields[0], MsgsmsRequestConfirmationCodeRequest::BEGIN, &__request,MsgsmsRequestConfirmationCodeResponse::BEGIN, &sms);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000\035",&SkypeFields[0], MsgsmsRequestConfirmationCodeRequest::BEGIN,&type,&number)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgsmsRequestConfirmationCodeResponse::BEGIN,&sms);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::SubmitConfirmationCode(
        const Sid::String& number,
        const Sid::String& code,
        SmsRef& sms
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgsmsSubmitConfirmationCodeRequest __request;
        __request.number=number;
        __request.code=code;
        bool __status = __session->call(4,"ZR\000\036",&SkypeFields[0], MsgsmsSubmitConfirmationCodeRequest::BEGIN, &__request,MsgsmsSubmitConfirmationCodeResponse::BEGIN, &sms);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000\036",&SkypeFields[0], MsgsmsSubmitConfirmationCodeRequest::BEGIN,&number,&code)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgsmsSubmitConfirmationCodeResponse::BEGIN,&sms);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::CreateOutgoingSms(
        SmsRef& sms
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\106",&SkypeFields[0], 0,0,MsgsmsCreateOutgoingSmsResponse::BEGIN, &sms);
        return __status;
        #        else
        bool __status = __session->call_0n(4,"ZR\000\106",&SkypeFields[0],MsgsmsCreateOutgoingSmsResponse::BEGIN,&sms);
        return __status;
        #        endif
}

bool Transfer::Accept(
        const Sid::Filename& filenameWithPath,
        bool& success
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgftTransferAcceptRequest __request;
        __request.objectID= object_id;
        __request.filenameWithPath=filenameWithPath;
        bool __status = __session->call(4,"ZR\006\003",&SkypeFields[0], MsgftTransferAcceptRequest::BEGIN, &__request,MsgftTransferAcceptResponse::BEGIN, &success);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\006\003",&SkypeFields[0], MsgftTransferAcceptRequest::BEGIN,&object_id,&filenameWithPath)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgftTransferAcceptResponse::BEGIN,&success);
                return __status;
        }
        return false;
        #        endif
}

bool Transfer::Pause(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\006\004",&SkypeFields[0], MsgftTransferPauseRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\006\004",&SkypeFields[0], MsgftTransferPauseRequest::BEGIN,&object_id);
        #        endif
}

bool Transfer::Resume(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\006\005",&SkypeFields[0], MsgftTransferResumeRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\006\005",&SkypeFields[0], MsgftTransferResumeRequest::BEGIN,&object_id);
        #        endif
}

bool Transfer::Cancel(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\006\006",&SkypeFields[0], MsgftTransferCancelRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\006\006",&SkypeFields[0], MsgftTransferCancelRequest::BEGIN,&object_id);
        #        endif
}

bool Account::GetStatusWithProgress(
        STATUS& status,
        uint& progress// progress goes from 0..100 and indicates the progress for current status
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountAccountGetStatusWithProgressResponse __response;
        bool __status = __session->call(4,"ZR\005\001",&SkypeFields[0], MsgaccountAccountGetStatusWithProgressRequest::BEGIN, &object_id,MsgaccountAccountGetStatusWithProgressResponse::BEGIN, &__response);
        status=static_cast<STATUS>(__response.status);
        return __status;
        #        else
        int __rsp_status;
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\005\001",&SkypeFields[0], MsgaccountAccountGetStatusWithProgressRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgaccountAccountGetStatusWithProgressResponse::BEGIN,&__rsp_status,&progress);
                status=static_cast<STATUS>(__rsp_status);
                return __status;
        }
        return false;
        #        endif
}

bool Account::Login(
        const Contact::AVAILABILITY setAvailabilityTo// activate a LOGGED_OUT_AND_PWD_SAVED account. *optionally* set availability
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountAccountLoginRequest __request;
        __request.objectID= object_id;
        __request.setAvailabilityTo=setAvailabilityTo;
        bool __status = __session->call(4,"ZR\005\005",&SkypeFields[0], MsgaccountAccountLoginRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\005\005",&SkypeFields[0], MsgaccountAccountLoginRequest::BEGIN,&object_id,&setAvailabilityTo);
        #        endif
}

bool Account::LoginWithPassword(
        const Sid::String& password,
        const bool savePwd,
        const bool saveDataLocally
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountAccountLoginWithPasswordRequest __request;
        __request.objectID= object_id;
        __request.password=password;
        __request.savePwd=savePwd;
        __request.saveDataLocally=saveDataLocally;
        bool __status = __session->call(4,"ZR\005\006",&SkypeFields[0], MsgaccountAccountLoginWithPasswordRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\005\006",&SkypeFields[0], MsgaccountAccountLoginWithPasswordRequest::BEGIN,&object_id,&password,&savePwd,&saveDataLocally);
        #        endif
}

bool Account::Register(
        const Sid::String& password,
        const bool savePwd,
        const bool saveDataLocally,
        const Sid::String email,
        const bool allowSpam
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountAccountRegisterRequest __request;
        __request.objectID= object_id;
        __request.password=password;
        __request.savePwd=savePwd;
        __request.saveDataLocally=saveDataLocally;
        __request.email=email;
        __request.allowSpam=allowSpam;
        bool __status = __session->call(4,"ZR\005\007",&SkypeFields[0], MsgaccountAccountRegisterRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\005\007",&SkypeFields[0], MsgaccountAccountRegisterRequest::BEGIN,&object_id,&password,&savePwd,&saveDataLocally,&email,&allowSpam);
        #        endif
}

bool Account::Logout(
        const bool clearSavedPwd
)
{
        SERootObject* __session = root;
        __session->__logging_out(moduleID()); /* disable events apart from account changes */
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountAccountLogoutRequest __request;
        __request.objectID= object_id;
        __request.clearSavedPwd=clearSavedPwd;
        bool __status = __session->call(4,"ZR\005\010",&SkypeFields[0], MsgaccountAccountLogoutRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\005\010",&SkypeFields[0], MsgaccountAccountLogoutRequest::BEGIN,&object_id,&clearSavedPwd);
        #        endif
}

bool Account::ChangePassword(
        const Sid::String& oldPassword,
        const Sid::String& newPassword,
        const bool savePwd
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountAccountChangePasswordRequest __request;
        __request.objectID= object_id;
        __request.oldPassword=oldPassword;
        __request.newPassword=newPassword;
        __request.savePwd=savePwd;
        bool __status = __session->call(4,"ZR\005\013",&SkypeFields[0], MsgaccountAccountChangePasswordRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\005\013",&SkypeFields[0], MsgaccountAccountChangePasswordRequest::BEGIN,&object_id,&oldPassword,&newPassword,&savePwd);
        #        endif
}

bool Account::SetPasswordSaved(
        const bool& savePwd
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountAccountSetPasswordSavedRequest __request;
        __request.objectID= object_id;
        __request.savePwd=savePwd;
        bool __status = __session->call(4,"ZR\005\031",&SkypeFields[0], MsgaccountAccountSetPasswordSavedRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\005\031",&SkypeFields[0], MsgaccountAccountSetPasswordSavedRequest::BEGIN,&object_id,&savePwd);
        #        endif
}

bool Account::SetServersideIntProperty(
        const int& propKey,
        const uint& value
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountAccountSetServersideIntPropertyRequest __request;
        __request.objectID= object_id;
        __request.propKey=propKey;
        __request.value=value;
        bool __status = __session->call(4,"ZR\005\014",&SkypeFields[0], MsgaccountAccountSetServersideIntPropertyRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\005\014",&SkypeFields[0], MsgaccountAccountSetServersideIntPropertyRequest::BEGIN,&object_id,&propKey,&value);
        #        endif
}

bool Account::SetServersideStrProperty(
        const int& propKey,
        const Sid::String& value
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountAccountSetServersideStrPropertyRequest __request;
        __request.objectID= object_id;
        __request.propKey=propKey;
        __request.value=value;
        bool __status = __session->call(4,"ZR\005\015",&SkypeFields[0], MsgaccountAccountSetServersideStrPropertyRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\005\015",&SkypeFields[0], MsgaccountAccountSetServersideStrPropertyRequest::BEGIN,&object_id,&propKey,&value);
        #        endif
}

bool Account::CancelServerCommit(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\005\017",&SkypeFields[0], MsgaccountAccountCancelServerCommitRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\005\017",&SkypeFields[0], MsgaccountAccountCancelServerCommitRequest::BEGIN,&object_id);
        #        endif
}

bool Account::SetIntProperty(
        const int& propKey,
        const uint& value
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountAccountSetIntPropertyRequest __request;
        __request.objectID= object_id;
        __request.propKey=propKey;
        __request.value=value;
        bool __status = __session->call(4,"ZR\005\020",&SkypeFields[0], MsgaccountAccountSetIntPropertyRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\005\020",&SkypeFields[0], MsgaccountAccountSetIntPropertyRequest::BEGIN,&object_id,&propKey,&value);
        #        endif
}

bool Account::SetStrProperty(
        const int& propKey,
        const Sid::String& value
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountAccountSetStrPropertyRequest __request;
        __request.objectID= object_id;
        __request.propKey=propKey;
        __request.value=value;
        bool __status = __session->call(4,"ZR\005\021",&SkypeFields[0], MsgaccountAccountSetStrPropertyRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\005\021",&SkypeFields[0], MsgaccountAccountSetStrPropertyRequest::BEGIN,&object_id,&propKey,&value);
        #        endif
}

bool Account::SetBinProperty(
        const int& propKey,
        const Sid::Binary& value
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountAccountSetBinPropertyRequest __request;
        __request.objectID= object_id;
        __request.propKey=propKey;
        __request.value=value;
        bool __status = __session->call(4,"ZR\005\022",&SkypeFields[0], MsgaccountAccountSetBinPropertyRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\005\022",&SkypeFields[0], MsgaccountAccountSetBinPropertyRequest::BEGIN,&object_id,&propKey,&value);
        #        endif
}

bool Account::SetAvailability(
        const Contact::AVAILABILITY& availability// only subset of all contact availabilities allowed
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountAccountSetAvailabilityRequest __request;
        __request.objectID= object_id;
        __request.availability=availability;
        bool __status = __session->call(4,"ZR\005\023",&SkypeFields[0], MsgaccountAccountSetAvailabilityRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\005\023",&SkypeFields[0], MsgaccountAccountSetAvailabilityRequest::BEGIN,&object_id,&availability);
        #        endif
}

bool Account::SetStandby(
        const bool& standby
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountAccountSetStandbyRequest __request;
        __request.objectID= object_id;
        __request.standby=standby;
        bool __status = __session->call(4,"ZR\005\012",&SkypeFields[0], MsgaccountAccountSetStandbyRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\005\012",&SkypeFields[0], MsgaccountAccountSetStandbyRequest::BEGIN,&object_id,&standby);
        #        endif
}

bool Account::GetCapabilityStatus(
        const Contact::CAPABILITY& capability,
        CAPABILITYSTATUS& status,
        uint& expiryTimestamp
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountAccountGetCapabilityStatusRequest __request;
        __request.objectID= object_id;
        __request.capability=capability;
        MsgaccountAccountGetCapabilityStatusResponse __response;
        bool __status = __session->call(4,"ZR\005\025",&SkypeFields[0], MsgaccountAccountGetCapabilityStatusRequest::BEGIN, &__request,MsgaccountAccountGetCapabilityStatusResponse::BEGIN, &__response);
        status=static_cast<CAPABILITYSTATUS>(__response.status);
        return __status;
        #        else
        int __rsp_status;
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\005\025",&SkypeFields[0], MsgaccountAccountGetCapabilityStatusRequest::BEGIN,&object_id,&capability)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgaccountAccountGetCapabilityStatusResponse::BEGIN,&__rsp_status,&expiryTimestamp);
                status=static_cast<CAPABILITYSTATUS>(__rsp_status);
                return __status;
        }
        return false;
        #        endif
}

bool Account::GetSkypenameHash(
        Sid::String& skypenameHash
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\005\026",&SkypeFields[0], MsgaccountAccountGetSkypenameHashRequest::BEGIN, &object_id,MsgaccountAccountGetSkypenameHashResponse::BEGIN, &skypenameHash);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\005\026",&SkypeFields[0], MsgaccountAccountGetSkypenameHashRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgaccountAccountGetSkypenameHashResponse::BEGIN,&skypenameHash);
                return __status;
        }
        return false;
        #        endif
}

bool Account::GetVerifiedEmail(
        Sid::String& email
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\005\002",&SkypeFields[0], MsgaccountAccountGetVerifiedEmailRequest::BEGIN, &object_id,MsgaccountAccountGetVerifiedEmailResponse::BEGIN, &email);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\005\002",&SkypeFields[0], MsgaccountAccountGetVerifiedEmailRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgaccountAccountGetVerifiedEmailResponse::BEGIN,&email);
                return __status;
        }
        return false;
        #        endif
}

bool Account::GetVerifiedCompany(
        Sid::String& company
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\005\003",&SkypeFields[0], MsgaccountAccountGetVerifiedCompanyRequest::BEGIN, &object_id,MsgaccountAccountGetVerifiedCompanyResponse::BEGIN, &company);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\005\003",&SkypeFields[0], MsgaccountAccountGetVerifiedCompanyRequest::BEGIN,&object_id)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgaccountAccountGetVerifiedCompanyResponse::BEGIN,&company);
                return __status;
        }
        return false;
        #        endif
}

bool Account::Delete(
)
{
        SERootObject* __session = root;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\005\030",&SkypeFields[0], MsgaccountAccountDeleteRequest::BEGIN, &object_id,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\005\030",&SkypeFields[0], MsgaccountAccountDeleteRequest::BEGIN,&object_id);
        #        endif
}

bool Skype::GetAccount(
        const Sid::String& identity,
        AccountRef& account
)
{
        SERootObject* __session = this;
        static Sid::String last_skypename;
        if (last_skypename != identity) { cleanup(1,&account); last_skypename = identity; }
        __session->__logout_done(); /* enable events again */
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000s",&SkypeFields[0], MsgaccountGetAccountRequest::BEGIN, &identity,MsgaccountGetAccountResponse::BEGIN, &account);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000s",&SkypeFields[0], MsgaccountGetAccountRequest::BEGIN,&identity)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgaccountGetAccountResponse::BEGIN,&account);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::GetExistingAccounts(
        Sid::List_String& accountNameList
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000q",&SkypeFields[0], 0,0,MsgaccountGetExistingAccountsResponse::BEGIN, &accountNameList);
        return __status;
        #        else
        bool __status = __session->call_0n(4,"ZR\000q",&SkypeFields[0],MsgaccountGetExistingAccountsResponse::BEGIN,&accountNameList);
        return __status;
        #        endif
}

bool Skype::GetDefaultAccountName(
        Sid::String& account
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000r",&SkypeFields[0], 0,0,MsgaccountGetDefaultAccountNameResponse::BEGIN, &account);
        return __status;
        #        else
        bool __status = __session->call_0n(4,"ZR\000r",&SkypeFields[0],MsgaccountGetDefaultAccountNameResponse::BEGIN,&account);
        return __status;
        #        endif
}

bool Skype::GetSuggestedSkypename(
        const Sid::String& fullname,
        Sid::String& suggestedName
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000t",&SkypeFields[0], MsgaccountGetSuggestedSkypenameRequest::BEGIN, &fullname,MsgaccountGetSuggestedSkypenameResponse::BEGIN, &suggestedName);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000t",&SkypeFields[0], MsgaccountGetSuggestedSkypenameRequest::BEGIN,&fullname)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgaccountGetSuggestedSkypenameResponse::BEGIN,&suggestedName);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::ValidateAvatar(
        const Sid::Binary& value,
        VALIDATERESULT& result,
        int& freeBytesLeft
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountValidateAvatarResponse __response;
        bool __status = __session->call(4,"ZR\000w",&SkypeFields[0], MsgaccountValidateAvatarRequest::BEGIN, &value,MsgaccountValidateAvatarResponse::BEGIN, &__response);
        result=static_cast<VALIDATERESULT>(__response.result);
        return __status;
        #        else
        int __rsp_result;
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000w",&SkypeFields[0], MsgaccountValidateAvatarRequest::BEGIN,&value)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgaccountValidateAvatarResponse::BEGIN,&__rsp_result,&freeBytesLeft);
                result=static_cast<VALIDATERESULT>(__rsp_result);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::ValidateProfileString(
        const int& propKey,
        const Sid::String& strValue,
        VALIDATERESULT& result,
        int& freeBytesLeft,
        const bool forRegistration
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountValidateProfileStringRequest __request;
        __request.propKey=propKey;
        __request.strValue=strValue;
        __request.forRegistration=forRegistration;
        MsgaccountValidateProfileStringResponse __response;
        bool __status = __session->call(4,"ZR\000f",&SkypeFields[0], MsgaccountValidateProfileStringRequest::BEGIN, &__request,MsgaccountValidateProfileStringResponse::BEGIN, &__response);
        result=static_cast<VALIDATERESULT>(__response.result);
        return __status;
        #        else
        int __rsp_result;
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000f",&SkypeFields[0], MsgaccountValidateProfileStringRequest::BEGIN,&propKey,&strValue,&forRegistration)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgaccountValidateProfileStringResponse::BEGIN,&__rsp_result,&freeBytesLeft);
                result=static_cast<VALIDATERESULT>(__rsp_result);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::ValidatePassword(
        const Sid::String& username,
        const Sid::String& password,
        VALIDATERESULT& result
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgaccountValidatePasswordRequest __request;
        __request.username=username;
        __request.password=password;
        bool __status = __session->call(4,"ZR\000G",&SkypeFields[0], MsgaccountValidatePasswordRequest::BEGIN, &__request,MsgaccountValidatePasswordResponse::BEGIN, &result);
        return __status;
        #        else
        int __rsp_result;
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000G",&SkypeFields[0], MsgaccountValidatePasswordRequest::BEGIN,&username,&password)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgaccountValidatePasswordResponse::BEGIN,&__rsp_result);
                result=static_cast<VALIDATERESULT>(__rsp_result);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::GetStr(
        const Sid::String& key,
        Sid::String& value
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000x",&SkypeFields[0], MsgsetupGetStrRequest::BEGIN, &key,MsgsetupGetStrResponse::BEGIN, &value);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000x",&SkypeFields[0], MsgsetupGetStrRequest::BEGIN,&key)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgsetupGetStrResponse::BEGIN,&value);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::GetInt(
        const Sid::String& key,
        int& value
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000y",&SkypeFields[0], MsgsetupGetIntRequest::BEGIN, &key,MsgsetupGetIntResponse::BEGIN, &value);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000y",&SkypeFields[0], MsgsetupGetIntRequest::BEGIN,&key)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgsetupGetIntResponse::BEGIN,&value);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::GetBin(
        const Sid::String& key,
        Sid::Binary& value
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000z",&SkypeFields[0], MsgsetupGetBinRequest::BEGIN, &key,MsgsetupGetBinResponse::BEGIN, &value);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000z",&SkypeFields[0], MsgsetupGetBinRequest::BEGIN,&key)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgsetupGetBinResponse::BEGIN,&value);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::SetStr(
        const Sid::String& key,
        const Sid::String& value
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgsetupSetStrRequest __request;
        __request.key=key;
        __request.value=value;
        bool __status = __session->call(4,"ZR\000{",&SkypeFields[0], MsgsetupSetStrRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\000{",&SkypeFields[0], MsgsetupSetStrRequest::BEGIN,&key,&value);
        #        endif
}

bool Skype::SetInt(
        const Sid::String& key,
        const int& value
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgsetupSetIntRequest __request;
        __request.key=key;
        __request.value=value;
        bool __status = __session->call(4,"ZR\000|",&SkypeFields[0], MsgsetupSetIntRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\000|",&SkypeFields[0], MsgsetupSetIntRequest::BEGIN,&key,&value);
        #        endif
}

bool Skype::SetBin(
        const Sid::String& key,
        const Sid::Binary& value
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        MsgsetupSetBinRequest __request;
        __request.key=key;
        __request.value=value;
        bool __status = __session->call(4,"ZR\000}",&SkypeFields[0], MsgsetupSetBinRequest::BEGIN, &__request,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\000}",&SkypeFields[0], MsgsetupSetBinRequest::BEGIN,&key,&value);
        #        endif
}

bool Skype::IsDefined(
        const Sid::String& key,
        bool& value
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000~",&SkypeFields[0], MsgsetupIsDefinedRequest::BEGIN, &key,MsgsetupIsDefinedResponse::BEGIN, &value);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,4,"ZR\000~",&SkypeFields[0], MsgsetupIsDefinedRequest::BEGIN,&key)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgsetupIsDefinedResponse::BEGIN,&value);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::Delete(
        const Sid::String& key
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(4,"ZR\000\177",&SkypeFields[0], MsgsetupDeleteRequest::BEGIN, &key,0,0);
        return __status;
        #        else
        return __session->call_m0(4,"ZR\000\177",&SkypeFields[0], MsgsetupDeleteRequest::BEGIN,&key);
        #        endif
}

bool Skype::GetSubKeys(
        const Sid::String& key,
        Sid::List_String& value
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(5,"ZR\000\200\001",&SkypeFields[0], MsgsetupGetSubKeysRequest::BEGIN, &key,MsgsetupGetSubKeysResponse::BEGIN, &value);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,5,"ZR\000\200\001",&SkypeFields[0], MsgsetupGetSubKeysRequest::BEGIN,&key)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgsetupGetSubKeysResponse::BEGIN,&value);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::GetISOLanguageInfo(
        Sid::List_String& languageCodeList,
        Sid::List_String& languageNameList// assumes UI has set correct language
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(5,"ZR\000\317\001",&SkypeFields[0], 0,0,0,0);
        return __status;
        #        else
        bool __status = __session->call_0n(5,"ZR\000\317\001",&SkypeFields[0],MsgisoGetISOLanguageInfoResponse::BEGIN,&languageCodeList,&languageNameList);
        return __status;
        #        endif
}

bool Skype::GetISOCountryInfo(
        Sid::List_String& countryCodeList,
        Sid::List_String& countryNameList,// assumes UI has set correct language
        Sid::List_uint& countryPrefixList,
        Sid::List_String& countryDialExampleList
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(5,"ZR\000\320\001",&SkypeFields[0], 0,0,0,0);
        return __status;
        #        else
        bool __status = __session->call_0n(5,"ZR\000\320\001",&SkypeFields[0],MsgisoGetISOCountryInfoResponse::BEGIN,&countryCodeList,&countryNameList,&countryPrefixList,&countryDialExampleList);
        return __status;
        #        endif
}

bool Skype::GetISOCountryCodebyPhoneNo(
        const Sid::String& number,
        Sid::String& countryCode
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(5,"ZR\000\323\001",&SkypeFields[0], MsgisoGetISOCountryCodebyPhoneNoRequest::BEGIN, &number,MsgisoGetISOCountryCodebyPhoneNoResponse::BEGIN, &countryCode);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,5,"ZR\000\323\001",&SkypeFields[0], MsgisoGetISOCountryCodebyPhoneNoRequest::BEGIN,&number)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],MsgisoGetISOCountryCodebyPhoneNoResponse::BEGIN,&countryCode);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::App2AppCreate(
        const Sid::String& appname,
        bool& result
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(5,"ZR\000\327\001",&SkypeFields[0], Msgapp2appApp2AppCreateRequest::BEGIN, &appname,Msgapp2appApp2AppCreateResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,5,"ZR\000\327\001",&SkypeFields[0], Msgapp2appApp2AppCreateRequest::BEGIN,&appname)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],Msgapp2appApp2AppCreateResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::App2AppDelete(
        const Sid::String& appname,
        bool& result
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        bool __status = __session->call(5,"ZR\000\330\001",&SkypeFields[0], Msgapp2appApp2AppDeleteRequest::BEGIN, &appname,Msgapp2appApp2AppDeleteResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,5,"ZR\000\330\001",&SkypeFields[0], Msgapp2appApp2AppDeleteRequest::BEGIN,&appname)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],Msgapp2appApp2AppDeleteResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::App2AppConnect(
        const Sid::String& appname,
        const Sid::String& skypename,
        bool& result
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        Msgapp2appApp2AppConnectRequest __request;
        __request.appname=appname;
        __request.skypename=skypename;
        bool __status = __session->call(5,"ZR\000\331\001",&SkypeFields[0], Msgapp2appApp2AppConnectRequest::BEGIN, &__request,Msgapp2appApp2AppConnectResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,5,"ZR\000\331\001",&SkypeFields[0], Msgapp2appApp2AppConnectRequest::BEGIN,&appname,&skypename)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],Msgapp2appApp2AppConnectResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::App2AppDisconnect(
        const Sid::String& appname,
        const Sid::String& stream,
        bool& result
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        Msgapp2appApp2AppDisconnectRequest __request;
        __request.appname=appname;
        __request.stream=stream;
        bool __status = __session->call(5,"ZR\000\332\001",&SkypeFields[0], Msgapp2appApp2AppDisconnectRequest::BEGIN, &__request,Msgapp2appApp2AppDisconnectResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,5,"ZR\000\332\001",&SkypeFields[0], Msgapp2appApp2AppDisconnectRequest::BEGIN,&appname,&stream)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],Msgapp2appApp2AppDisconnectResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::App2AppWrite(
        const Sid::String& appname,
        const Sid::String& stream,
        const Sid::Binary& data,
        bool& result
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        Msgapp2appApp2AppWriteRequest __request;
        __request.appname=appname;
        __request.stream=stream;
        __request.data=data;
        bool __status = __session->call(5,"ZR\000\333\001",&SkypeFields[0], Msgapp2appApp2AppWriteRequest::BEGIN, &__request,Msgapp2appApp2AppWriteResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,5,"ZR\000\333\001",&SkypeFields[0], Msgapp2appApp2AppWriteRequest::BEGIN,&appname,&stream,&data)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],Msgapp2appApp2AppWriteResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::App2AppDatagram(
        const Sid::String& appname,
        const Sid::String& stream,
        const Sid::Binary& data,
        bool& result
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        Msgapp2appApp2AppDatagramRequest __request;
        __request.appname=appname;
        __request.stream=stream;
        __request.data=data;
        bool __status = __session->call(5,"ZR\000\334\001",&SkypeFields[0], Msgapp2appApp2AppDatagramRequest::BEGIN, &__request,Msgapp2appApp2AppDatagramResponse::BEGIN, &result);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,5,"ZR\000\334\001",&SkypeFields[0], Msgapp2appApp2AppDatagramRequest::BEGIN,&appname,&stream,&data)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],Msgapp2appApp2AppDatagramResponse::BEGIN,&result);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::App2AppRead(
        const Sid::String& appname,
        const Sid::String& stream,
        bool& result,
        Sid::Binary& data
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        Msgapp2appApp2AppReadRequest __request;
        __request.appname=appname;
        __request.stream=stream;
        Msgapp2appApp2AppReadResponse __response;
        bool __status = __session->call(5,"ZR\000\335\001",&SkypeFields[0], Msgapp2appApp2AppReadRequest::BEGIN, &__request,Msgapp2appApp2AppReadResponse::BEGIN, &__response);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,5,"ZR\000\335\001",&SkypeFields[0], Msgapp2appApp2AppReadRequest::BEGIN,&appname,&stream)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],Msgapp2appApp2AppReadResponse::BEGIN,&result,&data);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::App2AppGetConnectableUsers(
        const Sid::String& appname,
        bool& result,
        Sid::List_String& users
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        Msgapp2appApp2AppGetConnectableUsersResponse __response;
        bool __status = __session->call(5,"ZR\000\336\001",&SkypeFields[0], Msgapp2appApp2AppGetConnectableUsersRequest::BEGIN, &appname,Msgapp2appApp2AppGetConnectableUsersResponse::BEGIN, &__response);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,5,"ZR\000\336\001",&SkypeFields[0], Msgapp2appApp2AppGetConnectableUsersRequest::BEGIN,&appname)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],Msgapp2appApp2AppGetConnectableUsersResponse::BEGIN,&result,&users);
                return __status;
        }
        return false;
        #        endif
}

bool Skype::App2AppGetStreamsList(
        const Sid::String& appname,
        const APP2APP_STREAMS& listType,
        bool& result,
        Sid::List_String& streams,
        Sid::List_uint& receivedSizes// For RECEIVED_STREAMS, contains the number of bytes in each stream waiting to be read
)
{
        SERootObject* __session = this;
        #        ifdef SKYPEKIT_DONT_USE_VARARG
        Msgapp2appApp2AppGetStreamsListRequest __request;
        __request.appname=appname;
        __request.listType=listType;
        Msgapp2appApp2AppGetStreamsListResponse __response;
        bool __status = __session->call(5,"ZR\000\337\001",&SkypeFields[0], Msgapp2appApp2AppGetStreamsListRequest::BEGIN, &__request,Msgapp2appApp2AppGetStreamsListResponse::BEGIN, &__response);
        return __status;
        #        else
        Sid::CommandInitiator* __cmdini;
        if (__session->call_mn(__cmdini,5,"ZR\000\337\001",&SkypeFields[0], Msgapp2appApp2AppGetStreamsListRequest::BEGIN,&appname,&listType)) {
                bool __status = __session->rd_parms_lst(__cmdini,&SkypeFields[0],Msgapp2appApp2AppGetStreamsListResponse::BEGIN,&result,&streams,&receivedSizes);
                return __status;
        }
        return false;
        #        endif
}
#ifdef SE_USE_NAMESPACE
} // Skype
#endif
