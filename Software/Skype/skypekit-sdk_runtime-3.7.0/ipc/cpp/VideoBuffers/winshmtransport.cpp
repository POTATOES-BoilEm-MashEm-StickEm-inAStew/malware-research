
#include "winshmtransport.h"


WinSHMTransport::WinSHMTransport()
{
}

WinSHMTransport::~WinSHMTransport()
{
}


bool WinSHMTransport::Allocate( bufferstruct *b )
{
	b->clientdata = 0;
	b->pitch = pitchfor( b->colorspace, b->bitcount, b->width, b->height );
	if ( b->pitch == 0 )
		return false;
	int id;
	struct bufdata *bdata = new struct bufdata;
	bdata->hFile = (void *)CreateNewMapping( b->pitch*b->height, &id );
	if ( !bdata->hFile )
		return false;
	bdata->data = MapViewOfFile( bdata->hFile, FILE_MAP_ALL_ACCESS,0, 0, 0 );
	b->bufid = id;
	b->type = SkypekitVideoTransportBase::WinSHMBuffer;
	b->clientdata = (uint64)bdata;
	return true;
}

void WinSHMTransport::FreeBuffer( bufferstruct *b )
{
	if ( b->clientdata ) {
		struct bufdata *bdata = (struct bufdata *)b->clientdata;
		if ( bdata->data ) {
			UnmapViewOfFile( bdata->data );
		}
		if ( bdata->hFile ) {
			CloseHandle( bdata->hFile );
		}
		delete (struct bufdata *)b->clientdata;
		b->clientdata = 0;
	}
	b->bufid = -1;
}

void *WinSHMTransport::DataForBuffer( bufferstruct *b )
{
	return ((struct bufdata *)b->clientdata)->data;
}

bool WinSHMTransport::Present( bufferstruct *b, long long ts )
{
	return Present( ((struct bufdata *)b->clientdata)->data, b, ts );
}

bool WinSHMTransport::Present( void *data, bufferstruct *b, long long ts )
{
	return true;
}
