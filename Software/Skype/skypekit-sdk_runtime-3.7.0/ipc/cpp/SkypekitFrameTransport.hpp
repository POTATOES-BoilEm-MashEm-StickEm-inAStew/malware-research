/*
 * Copyright (C) 2010, Skype Limited
 *
 * All intellectual property rights, including but not limited to copyrights,
 * trademarks and patents, as well as know how and trade secrets contained
 * in, relating to, or arising from the internet telephony software of Skype
 * Limited (including its affiliates, "Skype"), including without limitation
 * this source code, Skype API and related material of such software
 * proprietary to Skype and/or its licensors ("IP Rights") are and shall
 * remain the exclusive property of Skype and/or its licensors. The recipient
 * hereby acknowledges and agrees that any unauthorized use of the IP Rights
 * is a violation of intellectual property laws.
 *
 * Skype reserves all rights and may take legal action against infringers of
 * IP Rights.
 *
 * The recipient agrees not to remove, obscure, make illegible or alter any
 * notices or indications of the IP Rights and/or Skype's rights and ownership
 * thereof.
 */

#ifdef SKYPEKIT_SURFACE_RENDERING

#ifndef SKYPEKIT_FRAME_TRANSPORT_HPP
#define SKYPEKIT_FRAME_TRANSPORT_HPP

#ifdef __APPLE__
#include <OpenGL/OpenGL.h>
#else
#include <GL/gl.h>
#endif


#define SFT_FOURCC_RGB32 (0x32334942)
#define SFT_FOURCC_UYVY (0x59565955)
#define SFT_FOURCC_YUY2 (0x32595559)

class SkypekitFrameTransport
{
public:
	// Factory methods
	static SkypekitFrameTransport *CreateTransport(unsigned int fourcc,unsigned int width,unsigned int height);
	static SkypekitFrameTransport *OpenTransport(unsigned int key);

	// fourcc are fourcc values as defined in skype
	// pitch will be defined by the channel constraints.
	virtual ~SkypekitFrameTransport();
	virtual bool isInitialized()=0;

	// Valid only if initialized
	virtual unsigned int getKey()=0;
	virtual unsigned int getFourCC()=0;
	virtual unsigned int getWidth()=0;
	virtual unsigned int getHeight()=0;
	virtual unsigned int getBpp()=0;
	virtual unsigned int getPitch()=0;
	virtual void getSrcDimensions(unsigned int &width,unsigned int &height)=0;
	
	// check if connection is still alive
	virtual bool isClientConnected()=0;

	// Check for a new frame
	virtual bool hasNewFrame()=0;
	virtual void updateGLTexture(GLuint texture)=0;
	// Called when UI needts to change/delete texture
	virtual void resetGLTexture()=0;

	virtual void updateNewFrame(void *data,unsigned int width,unsigned int height,unsigned int pitch)=0;
};

#endif

#endif
