#ifndef _SKYPEKITVIDEOTRANSPORTBASE_H_
#define _SKYPEKITVIDEOTRANSPORTBASE_H_

#ifdef SKYPEKIT_SURFACE_RENDERING

#include "SidPlatform.hpp"

#ifdef _WIN32
//#include <windows.h>
typedef void * HANDLE;
#endif

#pragma pack(push)
#pragma pack(1)

#define VID_BUFFERS 5

class SkypekitVideoTransportBase {
	public:
		typedef unsigned long long uint64;
		enum FrameBufferTypes {
			SysVSHMBuffer,
			PosixSHMBuffer,
			IOSurfaceBuffer,
			WinSHMBuffer
		};
		typedef struct {
			int bufid;
			FrameBufferTypes type;
			bool available;
			uint64 colorspace;
			int bitcount;
			int width;
			int height;
			int pitch;
			int usagecount;
			uint64 clientdata;
		} bufferstruct;


#ifdef _WIN32
		bool AttachSharedMemory( HANDLE key );
#else
		bool AttachSharedMemory( int key );
#endif
		bool DetachSharedMemory();

		int getKey();

	protected:
#ifdef _WIN32
		HANDLE CreateNewMapping( int ssize, int *id );
		bool CreateNewSemaphoreSet( int *id );
		bool OpenSemaphoreSet( int id );
		HANDLE hMapFile;
#endif
		int comm_id;
		typedef struct {
			char command;
			int idata;
			long long lldata;

		} commandstruct;
		enum semaphore_ids {
			SemSendCommand=0,
			SemReceivedCommand,
			SemAvailableBuffers,
		};
#ifdef _WIN32
		HANDLE semaphores[3];
#endif
		/* Pointer into shared memroy */
		unsigned char *shm_data;
		commandstruct *command_data;
		bufferstruct *buffer_data;
		int *sem_id;
		unsigned char *pref_data;

};
#endif

#pragma pack(pop)

#endif
